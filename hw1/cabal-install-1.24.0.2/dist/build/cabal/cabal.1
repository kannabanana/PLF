.TH CABAL 1
.SH NAME
cabal \- a system for building and packaging Haskell libraries and programs
.SH SYNOPSIS
.B cabal
.I command
.RI < arguments |[ options ]>...

Where the
.I commands
are

.B cabal install
.R - Install packages.
.br
.B cabal update
.R - Updates list of known packages.
.br
.B cabal list
.R - List packages matching a search string.
.br
.B cabal info
.R - Display detailed information about a particular package.
.br
.B cabal fetch
.R - Downloads packages for later installation.
.br
.B cabal freeze
.R - Freeze dependencies.
.br
.B cabal get
.R - Download/Extract a package's source code (repository).
.br
.B cabal check
.R - Check the package for common mistakes.
.br
.B cabal sdist
.R - Generate a source distribution file (.tar.gz).
.br
.B cabal upload
.R - Uploads source packages or documentation to Hackage.
.br
.B cabal report
.R - Upload build reports to a remote server.
.br
.B cabal run
.R - Builds and runs an executable.
.br
.B cabal init
.R - Create a new .cabal package file (interactively).
.br
.B cabal configure
.R - Prepare to build the package.
.br
.B cabal build
.R - Compile all/specific components.
.br
.B cabal repl
.R - Open an interpreter session for the given component.
.br
.B cabal sandbox
.R - Create/modify/delete a sandbox.
.br
.B cabal haddock
.R - Generate Haddock HTML documentation.
.br
.B cabal exec
.R - Give a command access to the sandbox package repository.
.br
.B cabal user-config
.R - Display and update the user's global cabal configuration.
.br
.B cabal clean
.R - Clean up after a build.
.br
.B cabal gen-bounds
.R - Generate dependency bounds.
.br
.B cabal copy
.R - Copy the files into the install locations.
.br
.B cabal hscolour
.R - Generate HsColour colourised code, in HTML format.
.br
.B cabal register
.R - Register this package with the compiler.
.br
.B cabal test
.R - Run all/specific tests in the test suite.
.br
.B cabal bench
.R - Run all/specific benchmarks.
.br
.SH DESCRIPTION
Cabal is the standard package system for Haskell software. It helps people to configure, 
build and install Haskell software and to distribute it easily to other users and developers.

The command line cabal tool (also referred to as cabal-install) helps with 
installing existing packages and developing new packages. 
It can be used to work with local packages or to install packages from online package archives, 
including automatically installing dependencies. By default it is configured to use Hackage, 
which is Haskellâ€™s central package archive that contains thousands of libraries and applications 
in the Cabal package format.
.SH OPTIONS
Global options:

\-V, \-\-version
.br
.RS
Print version information
.RE

\-\-numeric-version
.br
.RS
Print just the version number
.RE

\-\-config-file
.I FILE
.RS
Set an alternate location for the config file
.RE

\-\-sandbox-config-file
.I FILE
.RS
Set an alternate location for the sandbox config file (default: './cabal.sandbox.config')
.RE

\-\-default-user-config
.I FILE
.RS
Set a location for a cabal.config file for projects without their own cabal.config freeze file.
.RE

\-\-require-sandbox
.br
\-\-no-require-sandbox
.br
.RS
requiring the presence of a sandbox for sandbox-aware commands
.RE

\-\-ignore-sandbox
.br
.RS
Ignore any existing sandbox
.RE

\-\-ignore-expiry
.br
.RS
Ignore expiry dates on signed metadata (use only in exceptional circumstances)
.RE

\-\-http-transport
.I HttpTransport
.RS
Set a transport for http(s) requests. Accepts 'curl', 'wget', 'powershell', and 'plain-http'. (default: 'curl')
.RE

\-\-remote-repo
.I NAME:URL
.RS
The name and url for a remote repository
.RE

\-\-remote-repo-cache
.I DIR
.RS
The location where downloads from all remote repos are cached
.RE

\-\-local-repo
.I DIR
.RS
The location of a local repository
.RE

\-\-logs-dir
.I DIR
.RS
The location to put log files
.RE

\-\-world-file
.I FILE
.RS
The location of the world file
.RE

.SH COMMANDS
.B cabal install

Usage: cabal install [FLAGS]
   or: cabal install [FLAGS] PACKAGES


Installs one or more packages. By default, the installed package will be
registered in the user's package database or, if a sandbox is present in the
current directory, inside the sandbox.

If PACKAGES are specified, downloads and installs those packages. Otherwise,
install the package in the current directory (and/or its dependencies) (there
must be exactly one .cabal file in the current directory).

When using a sandbox, the flags for `install` only affect the current command
and have no effect on future commands. (To achieve that, `configure` must be
used.)
In contrast, without a sandbox, the flags to `install` are saved and affect
future commands such as `build` and `repl`. See the help for `configure` for a
list of commands being affected.

Installed executables will by default (and without a sandbox) be put into
`~/.cabal/bin/`. If you want installed executable to be available globally,
make sure that the PATH environment variable contains that directory.
When using a sandbox, executables will be put into `$SANDBOX/bin/` (by
default: `./.cabal-sandbox/bin/`).

When specifying --bindir, consider also specifying --datadir; this way the
sandbox can be deleted and the executable should continue working as long as
bindir and datadir are left untouched.


The flags --with-PROG and --PROG-option(s) can be used with the following programs:
  alex ar c2hs cpphs gcc ghc ghc-pkg ghcjs ghcjs-pkg greencard haddock happy
  haskell-suite haskell-suite-pkg hmake hpc hsc2hs hscolour jhc ld lhc lhc-pkg
  pkg-config strip tar uhc

Examples:
  cabal install                     Package in the current directory
  cabal install foo                 Package from the hackage server
  cabal install foo-1.0             Specific version of a package
  cabal install 'foo < 2'           Constrained package version
  cabal install haddock --bindir=$HOME/hask-bin/ --datadir=$HOME/hask-data/
                                    Change installation destination


Flags:
.RS
\-v, \-\-verbose
.RI [ n ]
.RS
Control verbosity (n is 0--3, default verbosity level is 1)
.RE

\-\-builddir, \-\-distdir, \-\-distpref
.I DIR
.RS
The directory where Cabal puts generated build files (default dist)
.RE

\-g, \-\-ghc
.RS
compile with GHC
.RE

\-\-ghcjs
.RS
compile with GHCJS
.RE

\-\-jhc
.RS
compile with JHC
.RE

\-\-lhc
.RS
compile with LHC
.RE

\-\-uhc
.RS
compile with UHC
.RE

\-\-haskell-suite
.RS
compile with a haskell-suite compiler
.RE

\-w, \-\-with-compiler
.I PATH
.RS
give the path to a particular compiler
.RE

\-\-with-hc-pkg
.I PATH
.RS
give the path to the package tool
.RE

\-\-prefix
.I DIR
.RS
bake this prefix in preparation of installation
.RE

\-\-bindir
.I DIR
.RS
installation directory for executables
.RE

\-\-libdir
.I DIR
.RS
installation directory for libraries
.RE

\-\-libsubdir
.I DIR
.RS
subdirectory of libdir in which libs are installed
.RE

\-\-dynlibdir
.I DIR
.RS
installation directory for dynamic libraries
.RE

\-\-libexecdir
.I DIR
.RS
installation directory for program executables
.RE

\-\-datadir
.I DIR
.RS
installation directory for read-only data
.RE

\-\-datasubdir
.I DIR
.RS
subdirectory of datadir in which data files are installed
.RE

\-\-docdir
.I DIR
.RS
installation directory for documentation
.RE

\-\-htmldir
.I DIR
.RS
installation directory for HTML documentation
.RE

\-\-haddockdir
.I DIR
.RS
installation directory for haddock interfaces
.RE

\-\-sysconfdir
.I DIR
.RS
installation directory for configuration files
.RE

\-\-program-prefix
.I PREFIX
.RS
prefix to be applied to installed executables
.RE

\-\-program-suffix
.I SUFFIX
.RS
suffix to be applied to installed executables
.RE

\-\-enable-library-vanilla
.br
\-\-disable-library-vanilla
.br
.RS
Vanilla libraries
.RE

\-p, \-\-enable-library-profiling
.br
\-\-disable-library-profiling
.br
.RS
Library profiling
.RE

\-\-enable-shared
.br
\-\-disable-shared
.br
.RS
Shared library
.RE

\-\-enable-executable-dynamic
.br
\-\-disable-executable-dynamic
.br
.RS
Executable dynamic linking
.RE

\-\-enable-profiling
.br
\-\-disable-profiling
.br
.RS
Executable and library profiling
.RE

\-\-enable-executable-profiling
.br
\-\-disable-executable-profiling
.br
.RS
Executable profiling (DEPRECATED)
.RE

\-\-profiling-detail
.I level
.RS
Profiling detail level for executable and library (default, none, exported-functions, toplevel-functions,  all-functions).
.RE

\-\-library-profiling-detail
.I level
.RS
Profiling detail level for libraries only.
.RE

\-O, \-\-enable-optimization, \-\-enable-optimisation
.RI [ n ]
.RS
Build with optimization (n is 0--2, default is 1)
.RE

\-\-disable-optimization, \-\-disable-optimisation
.RS
Build without optimization
.RE

\-\-enable-debug-info
.RI [ n ]
.RS
Emit debug info (n is 0--3, default is 0)
.RE

\-\-disable-debug-info
.RS
Don't emit debug info
.RE

\-\-enable-library-for-ghci
.br
\-\-disable-library-for-ghci
.br
.RS
compile library for use with GHCi
.RE

\-\-enable-split-objs
.br
\-\-disable-split-objs
.br
.RS
split library into smaller objects to reduce binary sizes (GHC 6.6+)
.RE

\-\-enable-executable-stripping
.br
\-\-disable-executable-stripping
.br
.RS
strip executables upon installation to reduce binary sizes
.RE

\-\-enable-library-stripping
.br
\-\-disable-library-stripping
.br
.RS
strip libraries upon installation to reduce binary sizes
.RE

\-\-configure-option
.I OPT
.RS
Extra option for configure
.RE

\-\-user
.br
\-\-global
.br
.RS
doing a per-user installation
.RE

\-\-package-db
.I DB
.RS
Append the given package database to the list of package databases used (to satisfy dependencies and register into). May be a specific file, 'global' or 'user'. The initial list is ['global'], ['global', 'user'], or ['global', $sandbox], depending on context. Use 'clear' to reset the list to empty. See the user guide for details.
.RE

\-f, \-\-flags
.I FLAGS
.RS
Force values for the given flags in Cabal conditionals in the .cabal file.  E.g., --flags="debug -usebytestrings" forces the flag "debug" to true and "usebytestrings" to false.
.RE

\-\-extra-include-dirs
.I PATH
.RS
A list of directories to search for header files
.RE

\-\-ipid
.I IPID
.RS
Installed package ID to compile this package as
.RE

\-\-extra-lib-dirs
.I PATH
.RS
A list of directories to search for external libraries
.RE

\-\-extra-framework-dirs
.I PATH
.RS
A list of directories to search for external frameworks (OS X only)
.RE

\-\-extra-prog-path
.I PATH
.RS
A list of directories to search for required programs (in addition to the normal search locations)
.RE

\-\-enable-tests
.br
\-\-disable-tests
.br
.RS
dependency checking and compilation for test suites listed in the package description file.
.RE

\-\-enable-coverage
.br
\-\-disable-coverage
.br
.RS
build package with Haskell Program Coverage. (GHC only)
.RE

\-\-enable-library-coverage
.br
\-\-disable-library-coverage
.br
.RS
build package with Haskell Program Coverage. (GHC only) (DEPRECATED)
.RE

\-\-allow-newer
.RI [ DEPS ]
.RS
Ignore upper bounds in all dependencies or DEPS
.RE

\-\-enable-benchmarks
.br
\-\-disable-benchmarks
.br
.RS
dependency checking and compilation for benchmarks listed in the package description file.
.RE

\-\-enable-relocatable
.br
\-\-disable-relocatable
.br
.RS
building a package that is relocatable. (GHC only)
.RE

\-\-with-alex
.I PATH
.RS
give the path to alex
.RE

\-\-with-ar
.I PATH
.RS
give the path to ar
.RE

\-\-with-c2hs
.I PATH
.RS
give the path to c2hs
.RE

\-\-with-cpphs
.I PATH
.RS
give the path to cpphs
.RE

\-\-with-gcc
.I PATH
.RS
give the path to gcc
.RE

\-\-with-ghc
.I PATH
.RS
give the path to ghc
.RE

\-\-with-ghc-pkg
.I PATH
.RS
give the path to ghc-pkg
.RE

\-\-with-ghcjs
.I PATH
.RS
give the path to ghcjs
.RE

\-\-with-ghcjs-pkg
.I PATH
.RS
give the path to ghcjs-pkg
.RE

\-\-with-greencard
.I PATH
.RS
give the path to greencard
.RE

\-\-with-haddock
.I PATH
.RS
give the path to haddock
.RE

\-\-with-happy
.I PATH
.RS
give the path to happy
.RE

\-\-with-haskell-suite
.I PATH
.RS
give the path to haskell-suite
.RE

\-\-with-haskell-suite-pkg
.I PATH
.RS
give the path to haskell-suite-pkg
.RE

\-\-with-hmake
.I PATH
.RS
give the path to hmake
.RE

\-\-with-hpc
.I PATH
.RS
give the path to hpc
.RE

\-\-with-hsc2hs
.I PATH
.RS
give the path to hsc2hs
.RE

\-\-with-hscolour
.I PATH
.RS
give the path to hscolour
.RE

\-\-with-jhc
.I PATH
.RS
give the path to jhc
.RE

\-\-with-ld
.I PATH
.RS
give the path to ld
.RE

\-\-with-lhc
.I PATH
.RS
give the path to lhc
.RE

\-\-with-lhc-pkg
.I PATH
.RS
give the path to lhc-pkg
.RE

\-\-with-pkg-config
.I PATH
.RS
give the path to pkg-config
.RE

\-\-with-strip
.I PATH
.RS
give the path to strip
.RE

\-\-with-tar
.I PATH
.RS
give the path to tar
.RE

\-\-with-uhc
.I PATH
.RS
give the path to uhc
.RE

\-\-alex-option
.I OPT
.RS
give an extra option to alex (no need to quote options containing spaces)
.RE

\-\-ar-option
.I OPT
.RS
give an extra option to ar (no need to quote options containing spaces)
.RE

\-\-c2hs-option
.I OPT
.RS
give an extra option to c2hs (no need to quote options containing spaces)
.RE

\-\-cpphs-option
.I OPT
.RS
give an extra option to cpphs (no need to quote options containing spaces)
.RE

\-\-gcc-option
.I OPT
.RS
give an extra option to gcc (no need to quote options containing spaces)
.RE

\-\-ghc-option
.I OPT
.RS
give an extra option to ghc (no need to quote options containing spaces)
.RE

\-\-ghc-pkg-option
.I OPT
.RS
give an extra option to ghc-pkg (no need to quote options containing spaces)
.RE

\-\-ghcjs-option
.I OPT
.RS
give an extra option to ghcjs (no need to quote options containing spaces)
.RE

\-\-ghcjs-pkg-option
.I OPT
.RS
give an extra option to ghcjs-pkg (no need to quote options containing spaces)
.RE

\-\-greencard-option
.I OPT
.RS
give an extra option to greencard (no need to quote options containing spaces)
.RE

\-\-haddock-option
.I OPT
.RS
give an extra option to haddock (no need to quote options containing spaces)
.RE

\-\-happy-option
.I OPT
.RS
give an extra option to happy (no need to quote options containing spaces)
.RE

\-\-haskell-suite-option
.I OPT
.RS
give an extra option to haskell-suite (no need to quote options containing spaces)
.RE

\-\-haskell-suite-pkg-option
.I OPT
.RS
give an extra option to haskell-suite-pkg (no need to quote options containing spaces)
.RE

\-\-hmake-option
.I OPT
.RS
give an extra option to hmake (no need to quote options containing spaces)
.RE

\-\-hpc-option
.I OPT
.RS
give an extra option to hpc (no need to quote options containing spaces)
.RE

\-\-hsc2hs-option
.I OPT
.RS
give an extra option to hsc2hs (no need to quote options containing spaces)
.RE

\-\-hscolour-option
.I OPT
.RS
give an extra option to hscolour (no need to quote options containing spaces)
.RE

\-\-jhc-option
.I OPT
.RS
give an extra option to jhc (no need to quote options containing spaces)
.RE

\-\-ld-option
.I OPT
.RS
give an extra option to ld (no need to quote options containing spaces)
.RE

\-\-lhc-option
.I OPT
.RS
give an extra option to lhc (no need to quote options containing spaces)
.RE

\-\-lhc-pkg-option
.I OPT
.RS
give an extra option to lhc-pkg (no need to quote options containing spaces)
.RE

\-\-pkg-config-option
.I OPT
.RS
give an extra option to pkg-config (no need to quote options containing spaces)
.RE

\-\-strip-option
.I OPT
.RS
give an extra option to strip (no need to quote options containing spaces)
.RE

\-\-tar-option
.I OPT
.RS
give an extra option to tar (no need to quote options containing spaces)
.RE

\-\-uhc-option
.I OPT
.RS
give an extra option to uhc (no need to quote options containing spaces)
.RE

\-\-alex-options
.I OPTS
.RS
give extra options to alex
.RE

\-\-ar-options
.I OPTS
.RS
give extra options to ar
.RE

\-\-c2hs-options
.I OPTS
.RS
give extra options to c2hs
.RE

\-\-cpphs-options
.I OPTS
.RS
give extra options to cpphs
.RE

\-\-gcc-options
.I OPTS
.RS
give extra options to gcc
.RE

\-\-ghc-options
.I OPTS
.RS
give extra options to ghc
.RE

\-\-ghc-pkg-options
.I OPTS
.RS
give extra options to ghc-pkg
.RE

\-\-ghcjs-options
.I OPTS
.RS
give extra options to ghcjs
.RE

\-\-ghcjs-pkg-options
.I OPTS
.RS
give extra options to ghcjs-pkg
.RE

\-\-greencard-options
.I OPTS
.RS
give extra options to greencard
.RE

\-\-haddock-options
.I OPTS
.RS
give extra options to haddock
.RE

\-\-happy-options
.I OPTS
.RS
give extra options to happy
.RE

\-\-haskell-suite-options
.I OPTS
.RS
give extra options to haskell-suite
.RE

\-\-haskell-suite-pkg-options
.I OPTS
.RS
give extra options to haskell-suite-pkg
.RE

\-\-hmake-options
.I OPTS
.RS
give extra options to hmake
.RE

\-\-hpc-options
.I OPTS
.RS
give extra options to hpc
.RE

\-\-hsc2hs-options
.I OPTS
.RS
give extra options to hsc2hs
.RE

\-\-hscolour-options
.I OPTS
.RS
give extra options to hscolour
.RE

\-\-jhc-options
.I OPTS
.RS
give extra options to jhc
.RE

\-\-ld-options
.I OPTS
.RS
give extra options to ld
.RE

\-\-lhc-options
.I OPTS
.RS
give extra options to lhc
.RE

\-\-lhc-pkg-options
.I OPTS
.RS
give extra options to lhc-pkg
.RE

\-\-pkg-config-options
.I OPTS
.RS
give extra options to pkg-config
.RE

\-\-strip-options
.I OPTS
.RS
give extra options to strip
.RE

\-\-tar-options
.I OPTS
.RS
give extra options to tar
.RE

\-\-uhc-options
.I OPTS
.RS
give extra options to uhc
.RE

\-\-cabal-lib-version
.I VERSION
.RS
Select which version of the Cabal lib to use to build packages (useful for testing).
.RE

\-\-constraint
.I CONSTRAINT
.RS
Specify constraints on a package (version, installed/source, flags)
.RE

\-\-preference
.I CONSTRAINT
.RS
Specify preferences (soft constraints) on the version of a package
.RE

\-\-solver
.I SOLVER
.RS
Select dependency solver to use (default: choose). Choices: topdown, modular, choose, where 'choose' chooses between 'topdown' and 'modular' based on compiler version.
.RE

\-\-enable-documentation
.br
\-\-disable-documentation
.br
.RS
building of documentation
.RE

\-\-doc-index-file
.I TEMPLATE
.RS
A central index of haddock API documentation (template cannot use $pkgid)
.RE

\-\-dry-run
.br
.RS
Do not install anything, only print what would be installed.
.RE

\-\-max-backjumps
.I NUM
.RS
Maximum number of backjumps allowed while solving (default: 2000). Use a negative number to enable unlimited backtracking. Use 0 to disable backtracking completely.
.RE

\-\-reorder-goals
.br
\-\-no-reorder-goals
.br
.RS
Try to reorder goals according to certain heuristics. Slows things down on average, but may make backtracking faster for some packages.
.RE

\-\-shadow-installed-packages
.br
\-\-no-shadow-installed-packages
.br
.RS
If multiple package instances of the same version are installed, treat all but one as shadowed.
.RE

\-\-strong-flags
.br
\-\-no-strong-flags
.br
.RS
Do not defer flag choices (this used to be the default in cabal-install <= 1.20).
.RE

\-\-reinstall
.br
\-\-no-reinstall
.br
.RS
Install even if it means installing the same version again.
.RE

\-\-avoid-reinstalls
.br
\-\-no-avoid-reinstalls
.br
.RS
Do not select versions that would destructively overwrite installed packages.
.RE

\-\-force-reinstalls
.br
\-\-no-force-reinstalls
.br
.RS
Reinstall packages even if they will most likely break other installed packages.
.RE

\-\-upgrade-dependencies
.br
\-\-no-upgrade-dependencies
.br
.RS
Pick the latest version for all dependencies, rather than trying to pick an installed version.
.RE

\-\-only-dependencies
.br
\-\-no-only-dependencies
.br
.RS
Install only the dependencies necessary to build the given packages
.RE

\-\-dependencies-only
.br
\-\-no-dependencies-only
.br
.RS
A synonym for --only-dependencies
.RE

\-\-root-cmd
.I COMMAND
.RS
Command used to gain root privileges, when installing with --global.
.RE

\-\-symlink-bindir
.I DIR
.RS
Add symlinks to installed executables into this directory.
.RE

\-\-build-summary
.I TEMPLATE
.RS
Save build summaries to file (name template can use $pkgid, $compiler, $os, $arch)
.RE

\-\-build-log
.I TEMPLATE
.RS
Log all builds to file (name template can use $pkgid, $compiler, $os, $arch)
.RE

\-\-remote-build-reporting
.I LEVEL
.RS
Generate build reports to send to a remote server (none, anonymous or detailed).
.RE

\-\-report-planning-failure
.br
.RS
Generate build reports when the dependency solver fails. This is used by the Hackage build bot.
.RE

\-\-one-shot
.br
\-\-no-one-shot
.br
.RS
Do not record the packages in the world file.
.RE

\-\-run-tests
.br
.RS
Run package test suites during installation.
.RE

\-j, \-\-jobs
.RI [ NUM ]
.RS
Run NUM jobs simultaneously (or '$ncpus' if no NUM is given).
.RE

\-\-offline
.br
\-\-no-offline
.br
.RS
Don't download packages from the Internet.
.RE

\-\-only
.br
.RS
Only installs the package in the current directory.
.RE

\-\-haddock-hoogle
.br
.RS
Generate a hoogle database
.RE

\-\-haddock-html
.br
.RS
Generate HTML documentation (the default)
.RE

\-\-haddock-html-location
.I URL
.RS
Location of HTML documentation for pre-requisite packages
.RE

\-\-haddock-executables
.br
.RS
Run haddock for Executables targets
.RE

\-\-haddock-tests
.br
.RS
Run haddock for Test Suite targets
.RE

\-\-haddock-benchmarks
.br
.RS
Run haddock for Benchmark targets
.RE

\-\-haddock-all
.br
.RS
Run haddock for all targets
.RE

\-\-haddock-internal
.br
.RS
Run haddock for internal modules and include all symbols
.RE

\-\-haddock-css
.I PATH
.RS
Use PATH as the haddock stylesheet
.RE

\-\-haddock-hyperlink-source, \-\-haddock-hyperlink-sources
.br
.RS
Hyperlink the documentation to the source code (using HsColour)
.RE

\-\-haddock-hscolour-css
.I PATH
.RS
Use PATH as the HsColour stylesheet
.RE

\-\-haddock-contents-location
.I URL
.RS
Bake URL in as the location for the contents page
.RE

.RE

.B cabal update

Usage: cabal update [FLAGS]


For all known remote repositories, download the package list.


Relevant global configuration keys:
  remote-repo
  remote-repo-cache
  local-repo


Flags:
.RS
\-v, \-\-verbose
.RI [ n ]
.RS
Control verbosity (n is 0--3, default verbosity level is 1)
.RE

.RE

.B cabal list

Usage: cabal list [FLAGS]
   or: cabal list [FLAGS] STRINGS


List all packages, or all packages matching one of the search strings.

If there is a sandbox in the current directory and config:ignore-sandbox is
False, use the sandbox package database. Otherwise, use the package database
specified with --package-db. If not specified, use the user package database.


Examples:
  cabal list pandoc
    Will find pandoc, pandoc-citeproc, pandoc-lens, ...


Flags:
.RS
\-v, \-\-verbose
.RI [ n ]
.RS
Control verbosity (n is 0--3, default verbosity level is 1)
.RE

\-\-installed
.br
.RS
Only print installed packages
.RE

\-\-simple-output
.br
.RS
Print in a easy-to-parse format
.RE

\-\-package-db
.I DB
.RS
Append the given package database to the list of package databases used (to satisfy dependencies and register into). May be a specific file, 'global' or 'user'. The initial list is ['global'], ['global', 'user'], or ['global', $sandbox], depending on context. Use 'clear' to reset the list to empty. See the user guide for details.
.RE

.RE

.B cabal info

Usage: cabal info [FLAGS] PACKAGES


If there is a sandbox in the current directory and config:ignore-sandbox is
False, use the sandbox package database. Otherwise, use the package database
specified with --package-db. If not specified, use the user package database.


Flags:
.RS
\-v, \-\-verbose
.RI [ n ]
.RS
Control verbosity (n is 0--3, default verbosity level is 1)
.RE

\-\-package-db
.I DB
.RS
Append the given package database to the list of package databases used (to satisfy dependencies and register into). May be a specific file, 'global' or 'user'. The initial list is ['global'], ['global', 'user'], or ['global', $sandbox], depending on context. Use 'clear' to reset the list to empty. See the user guide for details.
.RE

.RE

.B cabal fetch

Usage: cabal fetch [FLAGS] PACKAGES


Note that it currently is not possible to fetch the dependencies for a
package in the current directory.


Flags:
.RS
\-v, \-\-verbose
.RI [ n ]
.RS
Control verbosity (n is 0--3, default verbosity level is 1)
.RE

\-\-dependencies, \-\-deps
.br
.RS
Resolve and fetch dependencies (default)
.RE

\-\-no-dependencies, \-\-no-deps
.br
.RS
Ignore dependencies
.RE

\-\-dry-run
.br
.RS
Do not install anything, only print what would be installed.
.RE

\-\-solver
.I SOLVER
.RS
Select dependency solver to use (default: choose). Choices: topdown, modular, choose, where 'choose' chooses between 'topdown' and 'modular' based on compiler version.
.RE

\-\-max-backjumps
.I NUM
.RS
Maximum number of backjumps allowed while solving (default: 2000). Use a negative number to enable unlimited backtracking. Use 0 to disable backtracking completely.
.RE

\-\-reorder-goals
.br
\-\-no-reorder-goals
.br
.RS
Try to reorder goals according to certain heuristics. Slows things down on average, but may make backtracking faster for some packages.
.RE

\-\-shadow-installed-packages
.br
\-\-no-shadow-installed-packages
.br
.RS
If multiple package instances of the same version are installed, treat all but one as shadowed.
.RE

\-\-strong-flags
.br
\-\-no-strong-flags
.br
.RS
Do not defer flag choices (this used to be the default in cabal-install <= 1.20).
.RE

.RE

.B cabal freeze

Usage: cabal freeze [FLAGS]


Calculates a valid set of dependencies and their exact versions. If
successful, saves the result to the file `cabal.config`.

The package versions specified in `cabal.config` will be used for any future
installs.

An existing `cabal.config` is ignored and overwritten.


Flags:
.RS
\-v, \-\-verbose
.RI [ n ]
.RS
Control verbosity (n is 0--3, default verbosity level is 1)
.RE

\-\-dry-run
.br
.RS
Do not freeze anything, only print what would be frozen
.RE

\-\-enable-tests
.br
\-\-disable-tests
.br
.RS
freezing of the dependencies of any tests suites in the package description file.
.RE

\-\-enable-benchmarks
.br
\-\-disable-benchmarks
.br
.RS
freezing of the dependencies of any benchmarks suites in the package description file.
.RE

\-\-solver
.I SOLVER
.RS
Select dependency solver to use (default: choose). Choices: topdown, modular, choose, where 'choose' chooses between 'topdown' and 'modular' based on compiler version.
.RE

\-\-max-backjumps
.I NUM
.RS
Maximum number of backjumps allowed while solving (default: 2000). Use a negative number to enable unlimited backtracking. Use 0 to disable backtracking completely.
.RE

\-\-reorder-goals
.br
\-\-no-reorder-goals
.br
.RS
Try to reorder goals according to certain heuristics. Slows things down on average, but may make backtracking faster for some packages.
.RE

\-\-shadow-installed-packages
.br
\-\-no-shadow-installed-packages
.br
.RS
If multiple package instances of the same version are installed, treat all but one as shadowed.
.RE

\-\-strong-flags
.br
\-\-no-strong-flags
.br
.RS
Do not defer flag choices (this used to be the default in cabal-install <= 1.20).
.RE

.RE

.B cabal get

Usage: cabal get [PACKAGES]


Creates a local copy of a package's source code. By default it gets the source
tarball and unpacks it in a local subdirectory. Alternatively, with -s it will
get the code from the source repository specified by the package.


Examples:
  cabal get hlint
    Download the latest stable version of hlint;
  cabal get lens --source-repository=head
    Download the source repository (i.e. git clone from github).


Flags:
.RS
\-v, \-\-verbose
.RI [ n ]
.RS
Control verbosity (n is 0--3, default verbosity level is 1)
.RE

\-d, \-\-destdir
.I PATH
.RS
Where to place the package source, defaults to the current directory.
.RE

\-s, \-\-source-repository
.RI [ [head|this|...] ]
.RS
Copy the package's source repository (ie git clone, darcs get, etc as appropriate).
.RE

\-\-pristine
.br
.RS
Unpack the original pristine tarball, rather than updating the .cabal file with the latest revision from the package archive.
.RE

.RE

.B cabal check

Usage: cabal check


Expects a .cabal package file in the current directory.

The checks correspond to the requirements to packages on Hackage. If no errors
and warnings are reported, Hackage will accept this package.


Flags:
.RS
.RE

.B cabal sdist

Usage: cabal sdist [FLAGS]


Flags:
.RS
\-v, \-\-verbose
.RI [ n ]
.RS
Control verbosity (n is 0--3, default verbosity level is 1)
.RE

\-\-builddir, \-\-distdir, \-\-distpref
.I DIR
.RS
The directory where Cabal puts generated build files (default dist)
.RE

\-\-list-sources
.I FILE
.RS
Just write a list of the package's sources to a file
.RE

\-\-snapshot
.br
.RS
Produce a snapshot source distribution
.RE

\-\-output-directory
.I DIR
.RS
Generate a source distribution in the given directory, without creating a tarball
.RE

\-\-targz
.RS
Produce a '.tar.gz' format archive (default and required for uploading to hackage)
.RE

\-\-zip
.RS
Produce a '.zip' format archive
.RE

.RE

.B cabal upload

Usage: cabal upload [FLAGS] TARFILES


You can store your Hackage login in the ~/.cabal/config file
Relevant global configuration keys:
  username
  password


Flags:
.RS
\-v, \-\-verbose
.RI [ n ]
.RS
Control verbosity (n is 0--3, default verbosity level is 1)
.RE

\-c, \-\-check
.br
.RS
Do not upload, just do QA checks.
.RE

\-d, \-\-documentation
.br
.RS
Upload documentation instead of a source package. Cannot be used together with --check.
.RE

\-u, \-\-username
.I USERNAME
.RS
Hackage username.
.RE

\-p, \-\-password
.I PASSWORD
.RS
Hackage password.
.RE

\-P, \-\-password-command
.I PASSWORD
.RS
Command to get Hackage password.
.RE

.RE

.B cabal report

Usage: cabal report [FLAGS]


You can store your Hackage login in the ~/.cabal/config file


Flags:
.RS
\-v, \-\-verbose
.RI [ n ]
.RS
Control verbosity (n is 0--3, default verbosity level is 1)
.RE

\-u, \-\-username
.I USERNAME
.RS
Hackage username.
.RE

\-p, \-\-password
.I PASSWORD
.RS
Hackage password.
.RE

.RE

.B cabal run

Usage: cabal run [FLAGS] [EXECUTABLE] [-- EXECUTABLE_FLAGS]


Builds and then runs the specified executable. If no executable is specified,
but the package contains just one executable, that one is built and executed.

Use `cabal test --show-details=streaming` to run a test-suite and get its full
output.


Examples:
  cabal run
    Run the only executable in the current package;
  cabal run foo -- --fooflag
    Works similar to `./foo --fooflag`.


Flags:
.RS
\-v, \-\-verbose
.RI [ n ]
.RS
Control verbosity (n is 0--3, default verbosity level is 1)
.RE

\-\-builddir, \-\-distdir, \-\-distpref
.I DIR
.RS
The directory where Cabal puts generated build files (default dist)
.RE

\-j, \-\-jobs
.RI [ NUM ]
.RS
Run NUM jobs simultaneously (or '$ncpus' if no NUM is given).
.RE

\-\-with-alex
.I PATH
.RS
give the path to alex
.RE

\-\-with-ar
.I PATH
.RS
give the path to ar
.RE

\-\-with-c2hs
.I PATH
.RS
give the path to c2hs
.RE

\-\-with-cpphs
.I PATH
.RS
give the path to cpphs
.RE

\-\-with-gcc
.I PATH
.RS
give the path to gcc
.RE

\-\-with-ghc
.I PATH
.RS
give the path to ghc
.RE

\-\-with-ghc-pkg
.I PATH
.RS
give the path to ghc-pkg
.RE

\-\-with-ghcjs
.I PATH
.RS
give the path to ghcjs
.RE

\-\-with-ghcjs-pkg
.I PATH
.RS
give the path to ghcjs-pkg
.RE

\-\-with-greencard
.I PATH
.RS
give the path to greencard
.RE

\-\-with-haddock
.I PATH
.RS
give the path to haddock
.RE

\-\-with-happy
.I PATH
.RS
give the path to happy
.RE

\-\-with-haskell-suite
.I PATH
.RS
give the path to haskell-suite
.RE

\-\-with-haskell-suite-pkg
.I PATH
.RS
give the path to haskell-suite-pkg
.RE

\-\-with-hmake
.I PATH
.RS
give the path to hmake
.RE

\-\-with-hpc
.I PATH
.RS
give the path to hpc
.RE

\-\-with-hsc2hs
.I PATH
.RS
give the path to hsc2hs
.RE

\-\-with-hscolour
.I PATH
.RS
give the path to hscolour
.RE

\-\-with-jhc
.I PATH
.RS
give the path to jhc
.RE

\-\-with-ld
.I PATH
.RS
give the path to ld
.RE

\-\-with-lhc
.I PATH
.RS
give the path to lhc
.RE

\-\-with-lhc-pkg
.I PATH
.RS
give the path to lhc-pkg
.RE

\-\-with-pkg-config
.I PATH
.RS
give the path to pkg-config
.RE

\-\-with-strip
.I PATH
.RS
give the path to strip
.RE

\-\-with-tar
.I PATH
.RS
give the path to tar
.RE

\-\-with-uhc
.I PATH
.RS
give the path to uhc
.RE

\-\-alex-option
.I OPT
.RS
give an extra option to alex (no need to quote options containing spaces)
.RE

\-\-ar-option
.I OPT
.RS
give an extra option to ar (no need to quote options containing spaces)
.RE

\-\-c2hs-option
.I OPT
.RS
give an extra option to c2hs (no need to quote options containing spaces)
.RE

\-\-cpphs-option
.I OPT
.RS
give an extra option to cpphs (no need to quote options containing spaces)
.RE

\-\-gcc-option
.I OPT
.RS
give an extra option to gcc (no need to quote options containing spaces)
.RE

\-\-ghc-option
.I OPT
.RS
give an extra option to ghc (no need to quote options containing spaces)
.RE

\-\-ghc-pkg-option
.I OPT
.RS
give an extra option to ghc-pkg (no need to quote options containing spaces)
.RE

\-\-ghcjs-option
.I OPT
.RS
give an extra option to ghcjs (no need to quote options containing spaces)
.RE

\-\-ghcjs-pkg-option
.I OPT
.RS
give an extra option to ghcjs-pkg (no need to quote options containing spaces)
.RE

\-\-greencard-option
.I OPT
.RS
give an extra option to greencard (no need to quote options containing spaces)
.RE

\-\-haddock-option
.I OPT
.RS
give an extra option to haddock (no need to quote options containing spaces)
.RE

\-\-happy-option
.I OPT
.RS
give an extra option to happy (no need to quote options containing spaces)
.RE

\-\-haskell-suite-option
.I OPT
.RS
give an extra option to haskell-suite (no need to quote options containing spaces)
.RE

\-\-haskell-suite-pkg-option
.I OPT
.RS
give an extra option to haskell-suite-pkg (no need to quote options containing spaces)
.RE

\-\-hmake-option
.I OPT
.RS
give an extra option to hmake (no need to quote options containing spaces)
.RE

\-\-hpc-option
.I OPT
.RS
give an extra option to hpc (no need to quote options containing spaces)
.RE

\-\-hsc2hs-option
.I OPT
.RS
give an extra option to hsc2hs (no need to quote options containing spaces)
.RE

\-\-hscolour-option
.I OPT
.RS
give an extra option to hscolour (no need to quote options containing spaces)
.RE

\-\-jhc-option
.I OPT
.RS
give an extra option to jhc (no need to quote options containing spaces)
.RE

\-\-ld-option
.I OPT
.RS
give an extra option to ld (no need to quote options containing spaces)
.RE

\-\-lhc-option
.I OPT
.RS
give an extra option to lhc (no need to quote options containing spaces)
.RE

\-\-lhc-pkg-option
.I OPT
.RS
give an extra option to lhc-pkg (no need to quote options containing spaces)
.RE

\-\-pkg-config-option
.I OPT
.RS
give an extra option to pkg-config (no need to quote options containing spaces)
.RE

\-\-strip-option
.I OPT
.RS
give an extra option to strip (no need to quote options containing spaces)
.RE

\-\-tar-option
.I OPT
.RS
give an extra option to tar (no need to quote options containing spaces)
.RE

\-\-uhc-option
.I OPT
.RS
give an extra option to uhc (no need to quote options containing spaces)
.RE

\-\-alex-options
.I OPTS
.RS
give extra options to alex
.RE

\-\-ar-options
.I OPTS
.RS
give extra options to ar
.RE

\-\-c2hs-options
.I OPTS
.RS
give extra options to c2hs
.RE

\-\-cpphs-options
.I OPTS
.RS
give extra options to cpphs
.RE

\-\-gcc-options
.I OPTS
.RS
give extra options to gcc
.RE

\-\-ghc-options
.I OPTS
.RS
give extra options to ghc
.RE

\-\-ghc-pkg-options
.I OPTS
.RS
give extra options to ghc-pkg
.RE

\-\-ghcjs-options
.I OPTS
.RS
give extra options to ghcjs
.RE

\-\-ghcjs-pkg-options
.I OPTS
.RS
give extra options to ghcjs-pkg
.RE

\-\-greencard-options
.I OPTS
.RS
give extra options to greencard
.RE

\-\-haddock-options
.I OPTS
.RS
give extra options to haddock
.RE

\-\-happy-options
.I OPTS
.RS
give extra options to happy
.RE

\-\-haskell-suite-options
.I OPTS
.RS
give extra options to haskell-suite
.RE

\-\-haskell-suite-pkg-options
.I OPTS
.RS
give extra options to haskell-suite-pkg
.RE

\-\-hmake-options
.I OPTS
.RS
give extra options to hmake
.RE

\-\-hpc-options
.I OPTS
.RS
give extra options to hpc
.RE

\-\-hsc2hs-options
.I OPTS
.RS
give extra options to hsc2hs
.RE

\-\-hscolour-options
.I OPTS
.RS
give extra options to hscolour
.RE

\-\-jhc-options
.I OPTS
.RS
give extra options to jhc
.RE

\-\-ld-options
.I OPTS
.RS
give extra options to ld
.RE

\-\-lhc-options
.I OPTS
.RS
give extra options to lhc
.RE

\-\-lhc-pkg-options
.I OPTS
.RS
give extra options to lhc-pkg
.RE

\-\-pkg-config-options
.I OPTS
.RS
give extra options to pkg-config
.RE

\-\-strip-options
.I OPTS
.RS
give extra options to strip
.RE

\-\-tar-options
.I OPTS
.RS
give extra options to tar
.RE

\-\-uhc-options
.I OPTS
.RS
give extra options to uhc
.RE

\-\-only
.RS
Don't reinstall add-source dependencies (sandbox-only)
.RE

.RE

.B cabal init

Usage: cabal init [FLAGS]


Cabalise a project by creating a .cabal, Setup.hs, and optionally a LICENSE
file.

Calling init with no arguments (recommended) uses an interactive mode, which
will try to guess as much as possible and prompt you for the rest.
Command-line arguments are provided for scripting purposes. If you don't want
interactive mode, be sure to pass the -n flag.


Flags:
.RS
\-n, \-\-non-interactive
.br
.RS
Non-interactive mode.
.RE

\-q, \-\-quiet
.br
.RS
Do not generate log messages to stdout.
.RE

\-\-no-comments
.br
.RS
Do not generate explanatory comments in the .cabal file.
.RE

\-m, \-\-minimal
.br
.RS
Generate a minimal .cabal file, that is, do not include extra empty fields.  Also implies --no-comments.
.RE

\-\-overwrite
.br
.RS
Overwrite any existing .cabal, LICENSE, or Setup.hs files without warning.
.RE

\-\-package-dir
.I DIRECTORY
.RS
Root directory of the package (default = current directory).
.RE

\-p, \-\-package-name
.I PACKAGE
.RS
Name of the Cabal package to create.
.RE

\-\-version
.I VERSION
.RS
Initial version of the package.
.RE

\-\-cabal-version
.I VERSION_RANGE
.RS
Required version of the Cabal library.
.RE

\-l, \-\-license
.I LICENSE
.RS
Project license.
.RE

\-a, \-\-author
.I NAME
.RS
Name of the project's author.
.RE

\-e, \-\-email
.I EMAIL
.RS
Email address of the maintainer.
.RE

\-u, \-\-homepage
.I URL
.RS
Project homepage and/or repository.
.RE

\-s, \-\-synopsis
.I TEXT
.RS
Short project synopsis.
.RE

\-c, \-\-category
.I CATEGORY
.RS
Project category.
.RE

\-x, \-\-extra-source-file
.I FILE
.RS
Extra source file to be distributed with tarball.
.RE

\-\-is-library
.RS
Build a library.
.RE

\-\-is-executable
.RS
Build an executable.
.RE

\-\-main-is
.I FILE
.RS
Specify the main module.
.RE

\-\-language
.I LANGUAGE
.RS
Specify the default language.
.RE

\-o, \-\-expose-module
.I MODULE
.RS
Export a module from the package.
.RE

\-\-extension
.I EXTENSION
.RS
Use a LANGUAGE extension (in the other-extensions field).
.RE

\-d, \-\-dependency
.I PACKAGE
.RS
Package dependency.
.RE

\-\-source-dir
.I DIR
.RS
Directory containing package source.
.RE

\-\-build-tool
.I TOOL
.RS
Required external build tool.
.RE

\-v, \-\-verbose
.RI [ n ]
.RS
Control verbosity (n is 0--3, default verbosity level is 1)
.RE

.RE

.B cabal configure

Usage: cabal configure [FLAGS]


Configure how the package is built by setting package (and other) flags.

The configuration affects several other commands, including build, test,
bench, run, repl.


The flags --with-PROG and --PROG-option(s) can be used with the following programs:
  alex ar c2hs cpphs gcc ghc ghc-pkg ghcjs ghcjs-pkg greencard haddock happy
  haskell-suite haskell-suite-pkg hmake hpc hsc2hs hscolour jhc ld lhc lhc-pkg
  pkg-config strip tar uhc

Examples:
  cabal configure
    Configure with defaults;
  cabal configure --enable-tests -fcustomflag
    Configure building package including tests,
    with some package-specific flag.


Flags:
.RS
\-v, \-\-verbose
.RI [ n ]
.RS
Control verbosity (n is 0--3, default verbosity level is 1)
.RE

\-\-builddir, \-\-distdir, \-\-distpref
.I DIR
.RS
The directory where Cabal puts generated build files (default dist)
.RE

\-g, \-\-ghc
.RS
compile with GHC
.RE

\-\-ghcjs
.RS
compile with GHCJS
.RE

\-\-jhc
.RS
compile with JHC
.RE

\-\-lhc
.RS
compile with LHC
.RE

\-\-uhc
.RS
compile with UHC
.RE

\-\-haskell-suite
.RS
compile with a haskell-suite compiler
.RE

\-w, \-\-with-compiler
.I PATH
.RS
give the path to a particular compiler
.RE

\-\-with-hc-pkg
.I PATH
.RS
give the path to the package tool
.RE

\-\-prefix
.I DIR
.RS
bake this prefix in preparation of installation
.RE

\-\-bindir
.I DIR
.RS
installation directory for executables
.RE

\-\-libdir
.I DIR
.RS
installation directory for libraries
.RE

\-\-libsubdir
.I DIR
.RS
subdirectory of libdir in which libs are installed
.RE

\-\-dynlibdir
.I DIR
.RS
installation directory for dynamic libraries
.RE

\-\-libexecdir
.I DIR
.RS
installation directory for program executables
.RE

\-\-datadir
.I DIR
.RS
installation directory for read-only data
.RE

\-\-datasubdir
.I DIR
.RS
subdirectory of datadir in which data files are installed
.RE

\-\-docdir
.I DIR
.RS
installation directory for documentation
.RE

\-\-htmldir
.I DIR
.RS
installation directory for HTML documentation
.RE

\-\-haddockdir
.I DIR
.RS
installation directory for haddock interfaces
.RE

\-\-sysconfdir
.I DIR
.RS
installation directory for configuration files
.RE

\-\-program-prefix
.I PREFIX
.RS
prefix to be applied to installed executables
.RE

\-\-program-suffix
.I SUFFIX
.RS
suffix to be applied to installed executables
.RE

\-\-enable-library-vanilla
.br
\-\-disable-library-vanilla
.br
.RS
Vanilla libraries
.RE

\-p, \-\-enable-library-profiling
.br
\-\-disable-library-profiling
.br
.RS
Library profiling
.RE

\-\-enable-shared
.br
\-\-disable-shared
.br
.RS
Shared library
.RE

\-\-enable-executable-dynamic
.br
\-\-disable-executable-dynamic
.br
.RS
Executable dynamic linking
.RE

\-\-enable-profiling
.br
\-\-disable-profiling
.br
.RS
Executable and library profiling
.RE

\-\-enable-executable-profiling
.br
\-\-disable-executable-profiling
.br
.RS
Executable profiling (DEPRECATED)
.RE

\-\-profiling-detail
.I level
.RS
Profiling detail level for executable and library (default, none, exported-functions, toplevel-functions,  all-functions).
.RE

\-\-library-profiling-detail
.I level
.RS
Profiling detail level for libraries only.
.RE

\-O, \-\-enable-optimization, \-\-enable-optimisation
.RI [ n ]
.RS
Build with optimization (n is 0--2, default is 1)
.RE

\-\-disable-optimization, \-\-disable-optimisation
.RS
Build without optimization
.RE

\-\-enable-debug-info
.RI [ n ]
.RS
Emit debug info (n is 0--3, default is 0)
.RE

\-\-disable-debug-info
.RS
Don't emit debug info
.RE

\-\-enable-library-for-ghci
.br
\-\-disable-library-for-ghci
.br
.RS
compile library for use with GHCi
.RE

\-\-enable-split-objs
.br
\-\-disable-split-objs
.br
.RS
split library into smaller objects to reduce binary sizes (GHC 6.6+)
.RE

\-\-enable-executable-stripping
.br
\-\-disable-executable-stripping
.br
.RS
strip executables upon installation to reduce binary sizes
.RE

\-\-enable-library-stripping
.br
\-\-disable-library-stripping
.br
.RS
strip libraries upon installation to reduce binary sizes
.RE

\-\-configure-option
.I OPT
.RS
Extra option for configure
.RE

\-\-user
.br
\-\-global
.br
.RS
doing a per-user installation
.RE

\-\-package-db
.I DB
.RS
Append the given package database to the list of package databases used (to satisfy dependencies and register into). May be a specific file, 'global' or 'user'. The initial list is ['global'], ['global', 'user'], or ['global', $sandbox], depending on context. Use 'clear' to reset the list to empty. See the user guide for details.
.RE

\-f, \-\-flags
.I FLAGS
.RS
Force values for the given flags in Cabal conditionals in the .cabal file.  E.g., --flags="debug -usebytestrings" forces the flag "debug" to true and "usebytestrings" to false.
.RE

\-\-extra-include-dirs
.I PATH
.RS
A list of directories to search for header files
.RE

\-\-ipid
.I IPID
.RS
Installed package ID to compile this package as
.RE

\-\-extra-lib-dirs
.I PATH
.RS
A list of directories to search for external libraries
.RE

\-\-extra-framework-dirs
.I PATH
.RS
A list of directories to search for external frameworks (OS X only)
.RE

\-\-extra-prog-path
.I PATH
.RS
A list of directories to search for required programs (in addition to the normal search locations)
.RE

\-\-enable-tests
.br
\-\-disable-tests
.br
.RS
dependency checking and compilation for test suites listed in the package description file.
.RE

\-\-enable-coverage
.br
\-\-disable-coverage
.br
.RS
build package with Haskell Program Coverage. (GHC only)
.RE

\-\-enable-library-coverage
.br
\-\-disable-library-coverage
.br
.RS
build package with Haskell Program Coverage. (GHC only) (DEPRECATED)
.RE

\-\-allow-newer
.RI [ DEPS ]
.RS
Ignore upper bounds in all dependencies or DEPS
.RE

\-\-enable-benchmarks
.br
\-\-disable-benchmarks
.br
.RS
dependency checking and compilation for benchmarks listed in the package description file.
.RE

\-\-enable-relocatable
.br
\-\-disable-relocatable
.br
.RS
building a package that is relocatable. (GHC only)
.RE

\-\-with-alex
.I PATH
.RS
give the path to alex
.RE

\-\-with-ar
.I PATH
.RS
give the path to ar
.RE

\-\-with-c2hs
.I PATH
.RS
give the path to c2hs
.RE

\-\-with-cpphs
.I PATH
.RS
give the path to cpphs
.RE

\-\-with-gcc
.I PATH
.RS
give the path to gcc
.RE

\-\-with-ghc
.I PATH
.RS
give the path to ghc
.RE

\-\-with-ghc-pkg
.I PATH
.RS
give the path to ghc-pkg
.RE

\-\-with-ghcjs
.I PATH
.RS
give the path to ghcjs
.RE

\-\-with-ghcjs-pkg
.I PATH
.RS
give the path to ghcjs-pkg
.RE

\-\-with-greencard
.I PATH
.RS
give the path to greencard
.RE

\-\-with-haddock
.I PATH
.RS
give the path to haddock
.RE

\-\-with-happy
.I PATH
.RS
give the path to happy
.RE

\-\-with-haskell-suite
.I PATH
.RS
give the path to haskell-suite
.RE

\-\-with-haskell-suite-pkg
.I PATH
.RS
give the path to haskell-suite-pkg
.RE

\-\-with-hmake
.I PATH
.RS
give the path to hmake
.RE

\-\-with-hpc
.I PATH
.RS
give the path to hpc
.RE

\-\-with-hsc2hs
.I PATH
.RS
give the path to hsc2hs
.RE

\-\-with-hscolour
.I PATH
.RS
give the path to hscolour
.RE

\-\-with-jhc
.I PATH
.RS
give the path to jhc
.RE

\-\-with-ld
.I PATH
.RS
give the path to ld
.RE

\-\-with-lhc
.I PATH
.RS
give the path to lhc
.RE

\-\-with-lhc-pkg
.I PATH
.RS
give the path to lhc-pkg
.RE

\-\-with-pkg-config
.I PATH
.RS
give the path to pkg-config
.RE

\-\-with-strip
.I PATH
.RS
give the path to strip
.RE

\-\-with-tar
.I PATH
.RS
give the path to tar
.RE

\-\-with-uhc
.I PATH
.RS
give the path to uhc
.RE

\-\-alex-option
.I OPT
.RS
give an extra option to alex (no need to quote options containing spaces)
.RE

\-\-ar-option
.I OPT
.RS
give an extra option to ar (no need to quote options containing spaces)
.RE

\-\-c2hs-option
.I OPT
.RS
give an extra option to c2hs (no need to quote options containing spaces)
.RE

\-\-cpphs-option
.I OPT
.RS
give an extra option to cpphs (no need to quote options containing spaces)
.RE

\-\-gcc-option
.I OPT
.RS
give an extra option to gcc (no need to quote options containing spaces)
.RE

\-\-ghc-option
.I OPT
.RS
give an extra option to ghc (no need to quote options containing spaces)
.RE

\-\-ghc-pkg-option
.I OPT
.RS
give an extra option to ghc-pkg (no need to quote options containing spaces)
.RE

\-\-ghcjs-option
.I OPT
.RS
give an extra option to ghcjs (no need to quote options containing spaces)
.RE

\-\-ghcjs-pkg-option
.I OPT
.RS
give an extra option to ghcjs-pkg (no need to quote options containing spaces)
.RE

\-\-greencard-option
.I OPT
.RS
give an extra option to greencard (no need to quote options containing spaces)
.RE

\-\-haddock-option
.I OPT
.RS
give an extra option to haddock (no need to quote options containing spaces)
.RE

\-\-happy-option
.I OPT
.RS
give an extra option to happy (no need to quote options containing spaces)
.RE

\-\-haskell-suite-option
.I OPT
.RS
give an extra option to haskell-suite (no need to quote options containing spaces)
.RE

\-\-haskell-suite-pkg-option
.I OPT
.RS
give an extra option to haskell-suite-pkg (no need to quote options containing spaces)
.RE

\-\-hmake-option
.I OPT
.RS
give an extra option to hmake (no need to quote options containing spaces)
.RE

\-\-hpc-option
.I OPT
.RS
give an extra option to hpc (no need to quote options containing spaces)
.RE

\-\-hsc2hs-option
.I OPT
.RS
give an extra option to hsc2hs (no need to quote options containing spaces)
.RE

\-\-hscolour-option
.I OPT
.RS
give an extra option to hscolour (no need to quote options containing spaces)
.RE

\-\-jhc-option
.I OPT
.RS
give an extra option to jhc (no need to quote options containing spaces)
.RE

\-\-ld-option
.I OPT
.RS
give an extra option to ld (no need to quote options containing spaces)
.RE

\-\-lhc-option
.I OPT
.RS
give an extra option to lhc (no need to quote options containing spaces)
.RE

\-\-lhc-pkg-option
.I OPT
.RS
give an extra option to lhc-pkg (no need to quote options containing spaces)
.RE

\-\-pkg-config-option
.I OPT
.RS
give an extra option to pkg-config (no need to quote options containing spaces)
.RE

\-\-strip-option
.I OPT
.RS
give an extra option to strip (no need to quote options containing spaces)
.RE

\-\-tar-option
.I OPT
.RS
give an extra option to tar (no need to quote options containing spaces)
.RE

\-\-uhc-option
.I OPT
.RS
give an extra option to uhc (no need to quote options containing spaces)
.RE

\-\-alex-options
.I OPTS
.RS
give extra options to alex
.RE

\-\-ar-options
.I OPTS
.RS
give extra options to ar
.RE

\-\-c2hs-options
.I OPTS
.RS
give extra options to c2hs
.RE

\-\-cpphs-options
.I OPTS
.RS
give extra options to cpphs
.RE

\-\-gcc-options
.I OPTS
.RS
give extra options to gcc
.RE

\-\-ghc-options
.I OPTS
.RS
give extra options to ghc
.RE

\-\-ghc-pkg-options
.I OPTS
.RS
give extra options to ghc-pkg
.RE

\-\-ghcjs-options
.I OPTS
.RS
give extra options to ghcjs
.RE

\-\-ghcjs-pkg-options
.I OPTS
.RS
give extra options to ghcjs-pkg
.RE

\-\-greencard-options
.I OPTS
.RS
give extra options to greencard
.RE

\-\-haddock-options
.I OPTS
.RS
give extra options to haddock
.RE

\-\-happy-options
.I OPTS
.RS
give extra options to happy
.RE

\-\-haskell-suite-options
.I OPTS
.RS
give extra options to haskell-suite
.RE

\-\-haskell-suite-pkg-options
.I OPTS
.RS
give extra options to haskell-suite-pkg
.RE

\-\-hmake-options
.I OPTS
.RS
give extra options to hmake
.RE

\-\-hpc-options
.I OPTS
.RS
give extra options to hpc
.RE

\-\-hsc2hs-options
.I OPTS
.RS
give extra options to hsc2hs
.RE

\-\-hscolour-options
.I OPTS
.RS
give extra options to hscolour
.RE

\-\-jhc-options
.I OPTS
.RS
give extra options to jhc
.RE

\-\-ld-options
.I OPTS
.RS
give extra options to ld
.RE

\-\-lhc-options
.I OPTS
.RS
give extra options to lhc
.RE

\-\-lhc-pkg-options
.I OPTS
.RS
give extra options to lhc-pkg
.RE

\-\-pkg-config-options
.I OPTS
.RS
give extra options to pkg-config
.RE

\-\-strip-options
.I OPTS
.RS
give extra options to strip
.RE

\-\-tar-options
.I OPTS
.RS
give extra options to tar
.RE

\-\-uhc-options
.I OPTS
.RS
give extra options to uhc
.RE

\-\-cabal-lib-version
.I VERSION
.RS
Select which version of the Cabal lib to use to build packages (useful for testing).
.RE

\-\-constraint
.I CONSTRAINT
.RS
Specify constraints on a package (version, installed/source, flags)
.RE

\-\-preference
.I CONSTRAINT
.RS
Specify preferences (soft constraints) on the version of a package
.RE

\-\-solver
.I SOLVER
.RS
Select dependency solver to use (default: choose). Choices: topdown, modular, choose, where 'choose' chooses between 'topdown' and 'modular' based on compiler version.
.RE

.RE

.B cabal build

Usage: cabal build [FLAGS]
   or: cabal build COMPONENTS [FLAGS]


Components encompass executables, tests, and benchmarks.

Affected by configuration options, see `configure`.


Examples:
  cabal build               All the components in the package
  cabal build foo           A component (i.e. lib, exe, test suite)

The flags --with-PROG and --PROG-option(s) can be used with the following programs:
  alex ar c2hs cpphs gcc ghc ghc-pkg ghcjs ghcjs-pkg greencard haddock happy
  haskell-suite haskell-suite-pkg hmake hpc hsc2hs hscolour jhc ld lhc lhc-pkg
  pkg-config strip tar uhc


Flags:
.RS
\-v, \-\-verbose
.RI [ n ]
.RS
Control verbosity (n is 0--3, default verbosity level is 1)
.RE

\-\-builddir, \-\-distdir, \-\-distpref
.I DIR
.RS
The directory where Cabal puts generated build files (default dist)
.RE

\-j, \-\-jobs
.RI [ NUM ]
.RS
Run NUM jobs simultaneously (or '$ncpus' if no NUM is given).
.RE

\-\-with-alex
.I PATH
.RS
give the path to alex
.RE

\-\-with-ar
.I PATH
.RS
give the path to ar
.RE

\-\-with-c2hs
.I PATH
.RS
give the path to c2hs
.RE

\-\-with-cpphs
.I PATH
.RS
give the path to cpphs
.RE

\-\-with-gcc
.I PATH
.RS
give the path to gcc
.RE

\-\-with-ghc
.I PATH
.RS
give the path to ghc
.RE

\-\-with-ghc-pkg
.I PATH
.RS
give the path to ghc-pkg
.RE

\-\-with-ghcjs
.I PATH
.RS
give the path to ghcjs
.RE

\-\-with-ghcjs-pkg
.I PATH
.RS
give the path to ghcjs-pkg
.RE

\-\-with-greencard
.I PATH
.RS
give the path to greencard
.RE

\-\-with-haddock
.I PATH
.RS
give the path to haddock
.RE

\-\-with-happy
.I PATH
.RS
give the path to happy
.RE

\-\-with-haskell-suite
.I PATH
.RS
give the path to haskell-suite
.RE

\-\-with-haskell-suite-pkg
.I PATH
.RS
give the path to haskell-suite-pkg
.RE

\-\-with-hmake
.I PATH
.RS
give the path to hmake
.RE

\-\-with-hpc
.I PATH
.RS
give the path to hpc
.RE

\-\-with-hsc2hs
.I PATH
.RS
give the path to hsc2hs
.RE

\-\-with-hscolour
.I PATH
.RS
give the path to hscolour
.RE

\-\-with-jhc
.I PATH
.RS
give the path to jhc
.RE

\-\-with-ld
.I PATH
.RS
give the path to ld
.RE

\-\-with-lhc
.I PATH
.RS
give the path to lhc
.RE

\-\-with-lhc-pkg
.I PATH
.RS
give the path to lhc-pkg
.RE

\-\-with-pkg-config
.I PATH
.RS
give the path to pkg-config
.RE

\-\-with-strip
.I PATH
.RS
give the path to strip
.RE

\-\-with-tar
.I PATH
.RS
give the path to tar
.RE

\-\-with-uhc
.I PATH
.RS
give the path to uhc
.RE

\-\-alex-option
.I OPT
.RS
give an extra option to alex (no need to quote options containing spaces)
.RE

\-\-ar-option
.I OPT
.RS
give an extra option to ar (no need to quote options containing spaces)
.RE

\-\-c2hs-option
.I OPT
.RS
give an extra option to c2hs (no need to quote options containing spaces)
.RE

\-\-cpphs-option
.I OPT
.RS
give an extra option to cpphs (no need to quote options containing spaces)
.RE

\-\-gcc-option
.I OPT
.RS
give an extra option to gcc (no need to quote options containing spaces)
.RE

\-\-ghc-option
.I OPT
.RS
give an extra option to ghc (no need to quote options containing spaces)
.RE

\-\-ghc-pkg-option
.I OPT
.RS
give an extra option to ghc-pkg (no need to quote options containing spaces)
.RE

\-\-ghcjs-option
.I OPT
.RS
give an extra option to ghcjs (no need to quote options containing spaces)
.RE

\-\-ghcjs-pkg-option
.I OPT
.RS
give an extra option to ghcjs-pkg (no need to quote options containing spaces)
.RE

\-\-greencard-option
.I OPT
.RS
give an extra option to greencard (no need to quote options containing spaces)
.RE

\-\-haddock-option
.I OPT
.RS
give an extra option to haddock (no need to quote options containing spaces)
.RE

\-\-happy-option
.I OPT
.RS
give an extra option to happy (no need to quote options containing spaces)
.RE

\-\-haskell-suite-option
.I OPT
.RS
give an extra option to haskell-suite (no need to quote options containing spaces)
.RE

\-\-haskell-suite-pkg-option
.I OPT
.RS
give an extra option to haskell-suite-pkg (no need to quote options containing spaces)
.RE

\-\-hmake-option
.I OPT
.RS
give an extra option to hmake (no need to quote options containing spaces)
.RE

\-\-hpc-option
.I OPT
.RS
give an extra option to hpc (no need to quote options containing spaces)
.RE

\-\-hsc2hs-option
.I OPT
.RS
give an extra option to hsc2hs (no need to quote options containing spaces)
.RE

\-\-hscolour-option
.I OPT
.RS
give an extra option to hscolour (no need to quote options containing spaces)
.RE

\-\-jhc-option
.I OPT
.RS
give an extra option to jhc (no need to quote options containing spaces)
.RE

\-\-ld-option
.I OPT
.RS
give an extra option to ld (no need to quote options containing spaces)
.RE

\-\-lhc-option
.I OPT
.RS
give an extra option to lhc (no need to quote options containing spaces)
.RE

\-\-lhc-pkg-option
.I OPT
.RS
give an extra option to lhc-pkg (no need to quote options containing spaces)
.RE

\-\-pkg-config-option
.I OPT
.RS
give an extra option to pkg-config (no need to quote options containing spaces)
.RE

\-\-strip-option
.I OPT
.RS
give an extra option to strip (no need to quote options containing spaces)
.RE

\-\-tar-option
.I OPT
.RS
give an extra option to tar (no need to quote options containing spaces)
.RE

\-\-uhc-option
.I OPT
.RS
give an extra option to uhc (no need to quote options containing spaces)
.RE

\-\-alex-options
.I OPTS
.RS
give extra options to alex
.RE

\-\-ar-options
.I OPTS
.RS
give extra options to ar
.RE

\-\-c2hs-options
.I OPTS
.RS
give extra options to c2hs
.RE

\-\-cpphs-options
.I OPTS
.RS
give extra options to cpphs
.RE

\-\-gcc-options
.I OPTS
.RS
give extra options to gcc
.RE

\-\-ghc-options
.I OPTS
.RS
give extra options to ghc
.RE

\-\-ghc-pkg-options
.I OPTS
.RS
give extra options to ghc-pkg
.RE

\-\-ghcjs-options
.I OPTS
.RS
give extra options to ghcjs
.RE

\-\-ghcjs-pkg-options
.I OPTS
.RS
give extra options to ghcjs-pkg
.RE

\-\-greencard-options
.I OPTS
.RS
give extra options to greencard
.RE

\-\-haddock-options
.I OPTS
.RS
give extra options to haddock
.RE

\-\-happy-options
.I OPTS
.RS
give extra options to happy
.RE

\-\-haskell-suite-options
.I OPTS
.RS
give extra options to haskell-suite
.RE

\-\-haskell-suite-pkg-options
.I OPTS
.RS
give extra options to haskell-suite-pkg
.RE

\-\-hmake-options
.I OPTS
.RS
give extra options to hmake
.RE

\-\-hpc-options
.I OPTS
.RS
give extra options to hpc
.RE

\-\-hsc2hs-options
.I OPTS
.RS
give extra options to hsc2hs
.RE

\-\-hscolour-options
.I OPTS
.RS
give extra options to hscolour
.RE

\-\-jhc-options
.I OPTS
.RS
give extra options to jhc
.RE

\-\-ld-options
.I OPTS
.RS
give extra options to ld
.RE

\-\-lhc-options
.I OPTS
.RS
give extra options to lhc
.RE

\-\-lhc-pkg-options
.I OPTS
.RS
give extra options to lhc-pkg
.RE

\-\-pkg-config-options
.I OPTS
.RS
give extra options to pkg-config
.RE

\-\-strip-options
.I OPTS
.RS
give extra options to strip
.RE

\-\-tar-options
.I OPTS
.RS
give extra options to tar
.RE

\-\-uhc-options
.I OPTS
.RS
give extra options to uhc
.RE

\-\-only
.RS
Don't reinstall add-source dependencies (sandbox-only)
.RE

.RE

.B cabal repl

Usage: cabal repl [COMPONENT] [FLAGS]


If the current directory contains no package, ignores COMPONENT parameters and
opens an interactive interpreter session; if a sandbox is present, its package
database will be used.

Otherwise, (re)configures with the given or default flags, and loads the
interpreter with the relevant modules. For executables, tests and benchmarks,
loads the main module (and its dependencies); for libraries all exposed/other
modules.

The default component is the library itself, or the executable if that is the
only component.

Support for loading specific modules is planned but not implemented yet. For
certain scenarios, `cabal exec -- ghci :l Foo` may be used instead. Note that
`exec` will not (re)configure and you will have to specify the location of
other modules, if required.


Examples:
  cabal repl               The first component in the package
  cabal repl foo           A named component (i.e. lib, exe, test suite)
  cabal repl --ghc-options="-lstdc++"  Specifying flags for interpreter


Flags:
.RS
\-v, \-\-verbose
.RI [ n ]
.RS
Control verbosity (n is 0--3, default verbosity level is 1)
.RE

\-\-builddir, \-\-distdir, \-\-distpref
.I DIR
.RS
The directory where Cabal puts generated build files (default dist)
.RE

\-\-with-alex
.I PATH
.RS
give the path to alex
.RE

\-\-with-ar
.I PATH
.RS
give the path to ar
.RE

\-\-with-c2hs
.I PATH
.RS
give the path to c2hs
.RE

\-\-with-cpphs
.I PATH
.RS
give the path to cpphs
.RE

\-\-with-gcc
.I PATH
.RS
give the path to gcc
.RE

\-\-with-ghc
.I PATH
.RS
give the path to ghc
.RE

\-\-with-ghc-pkg
.I PATH
.RS
give the path to ghc-pkg
.RE

\-\-with-ghcjs
.I PATH
.RS
give the path to ghcjs
.RE

\-\-with-ghcjs-pkg
.I PATH
.RS
give the path to ghcjs-pkg
.RE

\-\-with-greencard
.I PATH
.RS
give the path to greencard
.RE

\-\-with-haddock
.I PATH
.RS
give the path to haddock
.RE

\-\-with-happy
.I PATH
.RS
give the path to happy
.RE

\-\-with-haskell-suite
.I PATH
.RS
give the path to haskell-suite
.RE

\-\-with-haskell-suite-pkg
.I PATH
.RS
give the path to haskell-suite-pkg
.RE

\-\-with-hmake
.I PATH
.RS
give the path to hmake
.RE

\-\-with-hpc
.I PATH
.RS
give the path to hpc
.RE

\-\-with-hsc2hs
.I PATH
.RS
give the path to hsc2hs
.RE

\-\-with-hscolour
.I PATH
.RS
give the path to hscolour
.RE

\-\-with-jhc
.I PATH
.RS
give the path to jhc
.RE

\-\-with-ld
.I PATH
.RS
give the path to ld
.RE

\-\-with-lhc
.I PATH
.RS
give the path to lhc
.RE

\-\-with-lhc-pkg
.I PATH
.RS
give the path to lhc-pkg
.RE

\-\-with-pkg-config
.I PATH
.RS
give the path to pkg-config
.RE

\-\-with-strip
.I PATH
.RS
give the path to strip
.RE

\-\-with-tar
.I PATH
.RS
give the path to tar
.RE

\-\-with-uhc
.I PATH
.RS
give the path to uhc
.RE

\-\-alex-option
.I OPT
.RS
give an extra option to alex (no need to quote options containing spaces)
.RE

\-\-ar-option
.I OPT
.RS
give an extra option to ar (no need to quote options containing spaces)
.RE

\-\-c2hs-option
.I OPT
.RS
give an extra option to c2hs (no need to quote options containing spaces)
.RE

\-\-cpphs-option
.I OPT
.RS
give an extra option to cpphs (no need to quote options containing spaces)
.RE

\-\-gcc-option
.I OPT
.RS
give an extra option to gcc (no need to quote options containing spaces)
.RE

\-\-ghc-option
.I OPT
.RS
give an extra option to ghc (no need to quote options containing spaces)
.RE

\-\-ghc-pkg-option
.I OPT
.RS
give an extra option to ghc-pkg (no need to quote options containing spaces)
.RE

\-\-ghcjs-option
.I OPT
.RS
give an extra option to ghcjs (no need to quote options containing spaces)
.RE

\-\-ghcjs-pkg-option
.I OPT
.RS
give an extra option to ghcjs-pkg (no need to quote options containing spaces)
.RE

\-\-greencard-option
.I OPT
.RS
give an extra option to greencard (no need to quote options containing spaces)
.RE

\-\-haddock-option
.I OPT
.RS
give an extra option to haddock (no need to quote options containing spaces)
.RE

\-\-happy-option
.I OPT
.RS
give an extra option to happy (no need to quote options containing spaces)
.RE

\-\-haskell-suite-option
.I OPT
.RS
give an extra option to haskell-suite (no need to quote options containing spaces)
.RE

\-\-haskell-suite-pkg-option
.I OPT
.RS
give an extra option to haskell-suite-pkg (no need to quote options containing spaces)
.RE

\-\-hmake-option
.I OPT
.RS
give an extra option to hmake (no need to quote options containing spaces)
.RE

\-\-hpc-option
.I OPT
.RS
give an extra option to hpc (no need to quote options containing spaces)
.RE

\-\-hsc2hs-option
.I OPT
.RS
give an extra option to hsc2hs (no need to quote options containing spaces)
.RE

\-\-hscolour-option
.I OPT
.RS
give an extra option to hscolour (no need to quote options containing spaces)
.RE

\-\-jhc-option
.I OPT
.RS
give an extra option to jhc (no need to quote options containing spaces)
.RE

\-\-ld-option
.I OPT
.RS
give an extra option to ld (no need to quote options containing spaces)
.RE

\-\-lhc-option
.I OPT
.RS
give an extra option to lhc (no need to quote options containing spaces)
.RE

\-\-lhc-pkg-option
.I OPT
.RS
give an extra option to lhc-pkg (no need to quote options containing spaces)
.RE

\-\-pkg-config-option
.I OPT
.RS
give an extra option to pkg-config (no need to quote options containing spaces)
.RE

\-\-strip-option
.I OPT
.RS
give an extra option to strip (no need to quote options containing spaces)
.RE

\-\-tar-option
.I OPT
.RS
give an extra option to tar (no need to quote options containing spaces)
.RE

\-\-uhc-option
.I OPT
.RS
give an extra option to uhc (no need to quote options containing spaces)
.RE

\-\-alex-options
.I OPTS
.RS
give extra options to alex
.RE

\-\-ar-options
.I OPTS
.RS
give extra options to ar
.RE

\-\-c2hs-options
.I OPTS
.RS
give extra options to c2hs
.RE

\-\-cpphs-options
.I OPTS
.RS
give extra options to cpphs
.RE

\-\-gcc-options
.I OPTS
.RS
give extra options to gcc
.RE

\-\-ghc-options
.I OPTS
.RS
give extra options to ghc
.RE

\-\-ghc-pkg-options
.I OPTS
.RS
give extra options to ghc-pkg
.RE

\-\-ghcjs-options
.I OPTS
.RS
give extra options to ghcjs
.RE

\-\-ghcjs-pkg-options
.I OPTS
.RS
give extra options to ghcjs-pkg
.RE

\-\-greencard-options
.I OPTS
.RS
give extra options to greencard
.RE

\-\-haddock-options
.I OPTS
.RS
give extra options to haddock
.RE

\-\-happy-options
.I OPTS
.RS
give extra options to happy
.RE

\-\-haskell-suite-options
.I OPTS
.RS
give extra options to haskell-suite
.RE

\-\-haskell-suite-pkg-options
.I OPTS
.RS
give extra options to haskell-suite-pkg
.RE

\-\-hmake-options
.I OPTS
.RS
give extra options to hmake
.RE

\-\-hpc-options
.I OPTS
.RS
give extra options to hpc
.RE

\-\-hsc2hs-options
.I OPTS
.RS
give extra options to hsc2hs
.RE

\-\-hscolour-options
.I OPTS
.RS
give extra options to hscolour
.RE

\-\-jhc-options
.I OPTS
.RS
give extra options to jhc
.RE

\-\-ld-options
.I OPTS
.RS
give extra options to ld
.RE

\-\-lhc-options
.I OPTS
.RS
give extra options to lhc
.RE

\-\-lhc-pkg-options
.I OPTS
.RS
give extra options to lhc-pkg
.RE

\-\-pkg-config-options
.I OPTS
.RS
give extra options to pkg-config
.RE

\-\-strip-options
.I OPTS
.RS
give extra options to strip
.RE

\-\-tar-options
.I OPTS
.RS
give extra options to tar
.RE

\-\-uhc-options
.I OPTS
.RS
give extra options to uhc
.RE

\-\-reload
.br
.RS
Used from within an interpreter to update files.
.RE

\-\-only
.RS
Don't reinstall add-source dependencies (sandbox-only)
.RE

.RE

.B cabal sandbox

Usage: cabal sandbox init          [FLAGS]
   or: cabal sandbox delete        [FLAGS]
   or: cabal sandbox add-source    [FLAGS] PATHS
   or: cabal sandbox delete-source [FLAGS] PATHS
   or: cabal sandbox list-sources  [FLAGS]
   or: cabal sandbox hc-pkg        [FLAGS] [--] COMMAND [--] [ARGS]


Sandboxes are isolated package databases that can be used to prevent
dependency conflicts that arise when many different packages are installed in
the same database (i.e. the user's database in the home directory).

A sandbox in the current directory (created by `sandbox init`) will be used
instead of the user's database for commands such as `install` and `build`.
Note that (a directly invoked) GHC will not automatically be aware of
sandboxes; only if called via appropriate cabal commands, e.g. `repl`,
`build`, `exec`.

Currently, cabal will not search for a sandbox in folders above the current
one, so cabal will not see the sandbox if you are in a subfolder of a sandbox.

Subcommands:

init:
  Initialize a sandbox in the current directory. An existing package database
  will not be modified, but settings (such as the location of the database)
  can be modified this way.

delete:
  Remove the sandbox; deleting all the packages installed inside.

add-source:
  Make one or more local packages available in the sandbox. PATHS may be
  relative or absolute. Typical usecase is when you need to make a (temporary)
  modification to a dependency: You download the package into a different
  directory, make the modification, and add that directory to the sandbox with
  `add-source`.

  Unless given `--snapshot`, any add-source'd dependency that was modified
  since the last build will be re-installed automatically.

delete-source:
  Remove an add-source dependency; however, this will not delete the
  package(s) that have been installed in the sandbox from this dependency. You
  can either unregister the package(s) via `cabal sandbox hc-pkg unregister`
  or re-create the sandbox (`sandbox delete; sandbox init`).

list-sources:
  List the directories of local packages made available via `cabal
  add-source`.

hc-pkg:
  Similar to `ghc-pkg`, but for the sandbox package database. Can be used to
  list specific/all packages that are installed in the sandbox. For
  subcommands, see the help for ghc-pkg. Affected by the compiler version
  specified by `configure`.



Relevant global configuration keys:
  require-sandbox
  ignore-sandbox

Examples:
  Set up a sandbox with one local dependency, located at ../foo:
    cabal sandbox init
    cabal sandbox add-source ../foo
    cabal install --only-dependencies
  Reset the sandbox:
    cabal sandbox delete
    cabal sandbox init
    cabal install --only-dependencies
  List the packages in the sandbox:
    cabal sandbox hc-pkg list
  Unregister the `broken` package from the sandbox:
    cabal sandbox hc-pkg -- --force unregister broken


Flags:
.RS
\-v, \-\-verbose
.RI [ n ]
.RS
Control verbosity (n is 0--3, default verbosity level is 1)
.RE

\-\-snapshot
.br
.RS
Take a snapshot instead of creating a link (only applies to 'add-source')
.RE

\-\-sandbox
.I DIR
.RS
Sandbox location (default: './.cabal-sandbox').
.RE

.RE

.B cabal haddock

Usage: cabal haddock [FLAGS]


Requires the program haddock, version 2.x.


Flags:
.RS
\-v, \-\-verbose
.RI [ n ]
.RS
Control verbosity (n is 0--3, default verbosity level is 1)
.RE

\-\-builddir, \-\-distdir, \-\-distpref
.I DIR
.RS
The directory where Cabal puts generated build files (default dist)
.RE

\-\-keep-temp-files
.br
.RS
Keep temporary files
.RE

\-\-hoogle
.br
.RS
Generate a hoogle database
.RE

\-\-html
.br
.RS
Generate HTML documentation (the default)
.RE

\-\-html-location
.I URL
.RS
Location of HTML documentation for pre-requisite packages
.RE

\-\-for-hackage
.br
.RS
Collection of flags to generate documentation suitable for upload to hackage
.RE

\-\-executables
.br
.RS
Run haddock for Executables targets
.RE

\-\-tests
.br
.RS
Run haddock for Test Suite targets
.RE

\-\-benchmarks
.br
.RS
Run haddock for Benchmark targets
.RE

\-\-all
.br
.RS
Run haddock for all targets
.RE

\-\-internal
.br
.RS
Run haddock for internal modules and include all symbols
.RE

\-\-css
.I PATH
.RS
Use PATH as the haddock stylesheet
.RE

\-\-hyperlink-source, \-\-hyperlink-sources
.br
.RS
Hyperlink the documentation to the source code (using HsColour)
.RE

\-\-hscolour-css
.I PATH
.RS
Use PATH as the HsColour stylesheet
.RE

\-\-contents-location
.I URL
.RS
Bake URL in as the location for the contents page
.RE

\-\-with-ghc
.I PATH
.RS
give the path to ghc
.RE

\-\-with-haddock
.I PATH
.RS
give the path to haddock
.RE

\-\-ghc-option
.I OPT
.RS
give an extra option to ghc (no need to quote options containing spaces)
.RE

\-\-haddock-option
.I OPT
.RS
give an extra option to haddock (no need to quote options containing spaces)
.RE

\-\-ghc-options
.I OPTS
.RS
give extra options to ghc
.RE

\-\-haddock-options
.I OPTS
.RS
give extra options to haddock
.RE

.RE

.B cabal exec

Usage: cabal exec [FLAGS] [--] COMMAND [--] [ARGS]


A directly invoked GHC will not automatically be aware of any sandboxes: the
GHC_PACKAGE_PATH environment variable controls what GHC uses. `cabal exec` can
be used to modify this variable: COMMAND will be executed in a modified
environment and thereby uses the sandbox package database.

If there is no sandbox, behaves as identity (executing COMMAND).

Note that other cabal commands change the environment variable appropriately
already, so there is no need to wrap those in `cabal exec`. But with `cabal
exec`, the user has more control and can, for example, execute custom scripts
which indirectly execute GHC.

Note that `cabal repl` is different from `cabal exec -- ghci` as the latter
will not forward any additional flags being defined in the local package to
ghci.

See `cabal sandbox`.


Examples:
  cabal exec -- ghci -Wall
    Start a repl session with sandbox packages and all warnings;
  cabal exec gitit -- -f gitit.cnf
    Give gitit access to the sandbox packages, and pass it a flag;
  cabal exec runghc Foo.hs
    Execute runghc on Foo.hs with runghc configured to use the
    sandbox package database (if a sandbox is being used).


Flags:
.RS
\-v, \-\-verbose
.RI [ n ]
.RS
Control verbosity (n is 0--3, default verbosity level is 1)
.RE

.RE

.B cabal user-config

Usage: cabal user-config init
   or: cabal user-config diff
   or: cabal user-config update


When upgrading cabal, the set of configuration keys and their default values
may change. This command provides means to merge the existing config in
~/.cabal/config (i.e. all bindings that are actually defined and not commented
out) and the default config of the new version.

init: Creates a new config file at either ~/.cabal/config or as specified by
--config-file, if given. An existing file won't be overwritten unless -f or
--force is given.
diff: Shows a pseudo-diff of the user's ~/.cabal/config file and the default
configuration that would be created by cabal if the config file did not exist.
update: Applies the pseudo-diff to the configuration that would be created by
default, and write the result back to ~/.cabal/config.


Flags:
.RS
\-v, \-\-verbose
.RI [ n ]
.RS
Control verbosity (n is 0--3, default verbosity level is 1)
.RE

\-f, \-\-force
.br
.RS
Overwrite the config file if it already exists.
.RE

.RE

.B cabal clean

Usage: cabal clean [FLAGS]


Removes .hi, .o, preprocessed sources, etc.


Flags:
.RS
\-v, \-\-verbose
.RI [ n ]
.RS
Control verbosity (n is 0--3, default verbosity level is 1)
.RE

\-\-builddir, \-\-distdir, \-\-distpref
.I DIR
.RS
The directory where Cabal puts generated build files (default dist)
.RE

\-s, \-\-save-configure
.br
.RS
Do not remove the configuration file (dist/setup-config) during cleaning.  Saves need to reconfigure.
.RE

.RE

.B cabal gen-bounds

Usage: cabal gen-bounds [FLAGS]


Generates bounds for all dependencies that do not currently have them.
Generated bounds are printed to stdout. You can then paste them into your
.cabal file.



Flags:
.RS
\-v, \-\-verbose
.RI [ n ]
.RS
Control verbosity (n is 0--3, default verbosity level is 1)
.RE

.RE

.B cabal copy

Usage: cabal copy [FLAGS]


Does not call register, and allows a prefix at install time. Without the
--destdir flag, configure determines location.


Flags:
.RS
\-v, \-\-verbose
.RI [ n ]
.RS
Control verbosity (n is 0--3, default verbosity level is 1)
.RE

\-\-builddir, \-\-distdir, \-\-distpref
.I DIR
.RS
The directory where Cabal puts generated build files (default dist)
.RE

\-\-destdir
.I DIR
.RS
directory to copy files to, prepended to installation directories
.RE

.RE

.B cabal hscolour

Usage: cabal hscolour [FLAGS]


Requires the hscolour program.


Flags:
.RS
\-v, \-\-verbose
.RI [ n ]
.RS
Control verbosity (n is 0--3, default verbosity level is 1)
.RE

\-\-builddir, \-\-distdir, \-\-distpref
.I DIR
.RS
The directory where Cabal puts generated build files (default dist)
.RE

\-\-executables
.br
.RS
Run hscolour for Executables targets
.RE

\-\-tests
.br
.RS
Run hscolour for Test Suite targets
.RE

\-\-benchmarks
.br
.RS
Run hscolour for Benchmark targets
.RE

\-\-all
.br
.RS
Run hscolour for all targets
.RE

\-\-css
.I PATH
.RS
Use a cascading style sheet
.RE

.RE

.B cabal register

Usage: cabal register [FLAGS]


Flags:
.RS
\-v, \-\-verbose
.RI [ n ]
.RS
Control verbosity (n is 0--3, default verbosity level is 1)
.RE

\-\-builddir, \-\-distdir, \-\-distpref
.I DIR
.RS
The directory where Cabal puts generated build files (default dist)
.RE

\-\-user
.RS
upon registration, register this package in the user's local package database
.RE

\-\-global
.RS
(default)upon registration, register this package in the system-wide package database
.RE

\-\-inplace
.br
.RS
register the package in the build location, so it can be used without being installed
.RE

\-\-gen-script
.br
.RS
instead of registering, generate a script to register later
.RE

\-\-gen-pkg-config
.RI [ PKG ]
.RS
instead of registering, generate a package registration file
.RE

\-\-print-ipid
.br
.RS
print the installed package ID calculated for this package
.RE

.RE

.B cabal test

Usage: cabal test [FLAGS]
   or: cabal test TESTCOMPONENTS [FLAGS]


If necessary (re)configures with `--enable-tests` flag and builds the test
suite.

Remember that the tests' dependencies must be installed if there are
additional ones; e.g. with `cabal install --only-dependencies --enable-tests`.

By defining UserHooks in a custom Setup.hs, the package can define actions to
be executed before and after running tests.


Flags:
.RS
\-v, \-\-verbose
.RI [ n ]
.RS
Control verbosity (n is 0--3, default verbosity level is 1)
.RE

\-\-builddir, \-\-distdir, \-\-distpref
.I DIR
.RS
The directory where Cabal puts generated build files (default dist)
.RE

\-\-log
.I TEMPLATE
.RS
Log all test suite results to file (name template can use $pkgid, $compiler, $os, $arch, $test-suite, $result)
.RE

\-\-machine-log
.I TEMPLATE
.RS
Produce a machine-readable log file (name template can use $pkgid, $compiler, $os, $arch, $result)
.RE

\-\-show-details
.I FILTER
.RS
'always': always show results of individual test cases. 'never': never show results of individual test cases. 'failures': show results of failing test cases. 'streaming': show results of test cases in real time.'direct': send results of test cases in real time; no log file.
.RE

\-\-keep-tix-files
.br
.RS
keep .tix files for HPC between test runs
.RE

\-\-test-options
.I TEMPLATES
.RS
give extra options to test executables (name templates can use $pkgid, $compiler, $os, $arch, $test-suite)
.RE

\-\-test-option
.I TEMPLATE
.RS
give extra option to test executables (no need to quote options containing spaces, name template can use $pkgid, $compiler, $os, $arch, $test-suite)
.RE

\-j, \-\-jobs
.RI [ NUM ]
.RS
Run NUM jobs simultaneously (or '$ncpus' if no NUM is given).
.RE

\-\-with-alex
.I PATH
.RS
give the path to alex
.RE

\-\-with-ar
.I PATH
.RS
give the path to ar
.RE

\-\-with-c2hs
.I PATH
.RS
give the path to c2hs
.RE

\-\-with-cpphs
.I PATH
.RS
give the path to cpphs
.RE

\-\-with-gcc
.I PATH
.RS
give the path to gcc
.RE

\-\-with-ghc
.I PATH
.RS
give the path to ghc
.RE

\-\-with-ghc-pkg
.I PATH
.RS
give the path to ghc-pkg
.RE

\-\-with-ghcjs
.I PATH
.RS
give the path to ghcjs
.RE

\-\-with-ghcjs-pkg
.I PATH
.RS
give the path to ghcjs-pkg
.RE

\-\-with-greencard
.I PATH
.RS
give the path to greencard
.RE

\-\-with-haddock
.I PATH
.RS
give the path to haddock
.RE

\-\-with-happy
.I PATH
.RS
give the path to happy
.RE

\-\-with-haskell-suite
.I PATH
.RS
give the path to haskell-suite
.RE

\-\-with-haskell-suite-pkg
.I PATH
.RS
give the path to haskell-suite-pkg
.RE

\-\-with-hmake
.I PATH
.RS
give the path to hmake
.RE

\-\-with-hpc
.I PATH
.RS
give the path to hpc
.RE

\-\-with-hsc2hs
.I PATH
.RS
give the path to hsc2hs
.RE

\-\-with-hscolour
.I PATH
.RS
give the path to hscolour
.RE

\-\-with-jhc
.I PATH
.RS
give the path to jhc
.RE

\-\-with-ld
.I PATH
.RS
give the path to ld
.RE

\-\-with-lhc
.I PATH
.RS
give the path to lhc
.RE

\-\-with-lhc-pkg
.I PATH
.RS
give the path to lhc-pkg
.RE

\-\-with-pkg-config
.I PATH
.RS
give the path to pkg-config
.RE

\-\-with-strip
.I PATH
.RS
give the path to strip
.RE

\-\-with-tar
.I PATH
.RS
give the path to tar
.RE

\-\-with-uhc
.I PATH
.RS
give the path to uhc
.RE

\-\-alex-option
.I OPT
.RS
give an extra option to alex (no need to quote options containing spaces)
.RE

\-\-ar-option
.I OPT
.RS
give an extra option to ar (no need to quote options containing spaces)
.RE

\-\-c2hs-option
.I OPT
.RS
give an extra option to c2hs (no need to quote options containing spaces)
.RE

\-\-cpphs-option
.I OPT
.RS
give an extra option to cpphs (no need to quote options containing spaces)
.RE

\-\-gcc-option
.I OPT
.RS
give an extra option to gcc (no need to quote options containing spaces)
.RE

\-\-ghc-option
.I OPT
.RS
give an extra option to ghc (no need to quote options containing spaces)
.RE

\-\-ghc-pkg-option
.I OPT
.RS
give an extra option to ghc-pkg (no need to quote options containing spaces)
.RE

\-\-ghcjs-option
.I OPT
.RS
give an extra option to ghcjs (no need to quote options containing spaces)
.RE

\-\-ghcjs-pkg-option
.I OPT
.RS
give an extra option to ghcjs-pkg (no need to quote options containing spaces)
.RE

\-\-greencard-option
.I OPT
.RS
give an extra option to greencard (no need to quote options containing spaces)
.RE

\-\-haddock-option
.I OPT
.RS
give an extra option to haddock (no need to quote options containing spaces)
.RE

\-\-happy-option
.I OPT
.RS
give an extra option to happy (no need to quote options containing spaces)
.RE

\-\-haskell-suite-option
.I OPT
.RS
give an extra option to haskell-suite (no need to quote options containing spaces)
.RE

\-\-haskell-suite-pkg-option
.I OPT
.RS
give an extra option to haskell-suite-pkg (no need to quote options containing spaces)
.RE

\-\-hmake-option
.I OPT
.RS
give an extra option to hmake (no need to quote options containing spaces)
.RE

\-\-hpc-option
.I OPT
.RS
give an extra option to hpc (no need to quote options containing spaces)
.RE

\-\-hsc2hs-option
.I OPT
.RS
give an extra option to hsc2hs (no need to quote options containing spaces)
.RE

\-\-hscolour-option
.I OPT
.RS
give an extra option to hscolour (no need to quote options containing spaces)
.RE

\-\-jhc-option
.I OPT
.RS
give an extra option to jhc (no need to quote options containing spaces)
.RE

\-\-ld-option
.I OPT
.RS
give an extra option to ld (no need to quote options containing spaces)
.RE

\-\-lhc-option
.I OPT
.RS
give an extra option to lhc (no need to quote options containing spaces)
.RE

\-\-lhc-pkg-option
.I OPT
.RS
give an extra option to lhc-pkg (no need to quote options containing spaces)
.RE

\-\-pkg-config-option
.I OPT
.RS
give an extra option to pkg-config (no need to quote options containing spaces)
.RE

\-\-strip-option
.I OPT
.RS
give an extra option to strip (no need to quote options containing spaces)
.RE

\-\-tar-option
.I OPT
.RS
give an extra option to tar (no need to quote options containing spaces)
.RE

\-\-uhc-option
.I OPT
.RS
give an extra option to uhc (no need to quote options containing spaces)
.RE

\-\-alex-options
.I OPTS
.RS
give extra options to alex
.RE

\-\-ar-options
.I OPTS
.RS
give extra options to ar
.RE

\-\-c2hs-options
.I OPTS
.RS
give extra options to c2hs
.RE

\-\-cpphs-options
.I OPTS
.RS
give extra options to cpphs
.RE

\-\-gcc-options
.I OPTS
.RS
give extra options to gcc
.RE

\-\-ghc-options
.I OPTS
.RS
give extra options to ghc
.RE

\-\-ghc-pkg-options
.I OPTS
.RS
give extra options to ghc-pkg
.RE

\-\-ghcjs-options
.I OPTS
.RS
give extra options to ghcjs
.RE

\-\-ghcjs-pkg-options
.I OPTS
.RS
give extra options to ghcjs-pkg
.RE

\-\-greencard-options
.I OPTS
.RS
give extra options to greencard
.RE

\-\-haddock-options
.I OPTS
.RS
give extra options to haddock
.RE

\-\-happy-options
.I OPTS
.RS
give extra options to happy
.RE

\-\-haskell-suite-options
.I OPTS
.RS
give extra options to haskell-suite
.RE

\-\-haskell-suite-pkg-options
.I OPTS
.RS
give extra options to haskell-suite-pkg
.RE

\-\-hmake-options
.I OPTS
.RS
give extra options to hmake
.RE

\-\-hpc-options
.I OPTS
.RS
give extra options to hpc
.RE

\-\-hsc2hs-options
.I OPTS
.RS
give extra options to hsc2hs
.RE

\-\-hscolour-options
.I OPTS
.RS
give extra options to hscolour
.RE

\-\-jhc-options
.I OPTS
.RS
give extra options to jhc
.RE

\-\-ld-options
.I OPTS
.RS
give extra options to ld
.RE

\-\-lhc-options
.I OPTS
.RS
give extra options to lhc
.RE

\-\-lhc-pkg-options
.I OPTS
.RS
give extra options to lhc-pkg
.RE

\-\-pkg-config-options
.I OPTS
.RS
give extra options to pkg-config
.RE

\-\-strip-options
.I OPTS
.RS
give extra options to strip
.RE

\-\-tar-options
.I OPTS
.RS
give extra options to tar
.RE

\-\-uhc-options
.I OPTS
.RS
give extra options to uhc
.RE

\-\-only
.RS
Don't reinstall add-source dependencies (sandbox-only)
.RE

.RE

.B cabal bench

Usage: cabal bench [FLAGS]
   or: cabal bench BENCHCOMPONENTS [FLAGS]


If necessary (re)configures with `--enable-benchmarks` flag and builds the
benchmarks.

Remember that the benchmarks' dependencies must be installed if there are
additional ones; e.g. with `cabal install --only-dependencies
--enable-benchmarks`.

By defining UserHooks in a custom Setup.hs, the package can define actions to
be executed before and after running benchmarks.


Flags:
.RS
\-v, \-\-verbose
.RI [ n ]
.RS
Control verbosity (n is 0--3, default verbosity level is 1)
.RE

\-\-builddir, \-\-distdir, \-\-distpref
.I DIR
.RS
The directory where Cabal puts generated build files (default dist)
.RE

\-\-benchmark-options
.I TEMPLATES
.RS
give extra options to benchmark executables (name templates can use $pkgid, $compiler, $os, $arch, $benchmark)
.RE

\-\-benchmark-option
.I TEMPLATE
.RS
give extra option to benchmark executables (no need to quote options containing spaces, name template can use $pkgid, $compiler, $os, $arch, $benchmark)
.RE

\-j, \-\-jobs
.RI [ NUM ]
.RS
Run NUM jobs simultaneously (or '$ncpus' if no NUM is given).
.RE

\-\-with-alex
.I PATH
.RS
give the path to alex
.RE

\-\-with-ar
.I PATH
.RS
give the path to ar
.RE

\-\-with-c2hs
.I PATH
.RS
give the path to c2hs
.RE

\-\-with-cpphs
.I PATH
.RS
give the path to cpphs
.RE

\-\-with-gcc
.I PATH
.RS
give the path to gcc
.RE

\-\-with-ghc
.I PATH
.RS
give the path to ghc
.RE

\-\-with-ghc-pkg
.I PATH
.RS
give the path to ghc-pkg
.RE

\-\-with-ghcjs
.I PATH
.RS
give the path to ghcjs
.RE

\-\-with-ghcjs-pkg
.I PATH
.RS
give the path to ghcjs-pkg
.RE

\-\-with-greencard
.I PATH
.RS
give the path to greencard
.RE

\-\-with-haddock
.I PATH
.RS
give the path to haddock
.RE

\-\-with-happy
.I PATH
.RS
give the path to happy
.RE

\-\-with-haskell-suite
.I PATH
.RS
give the path to haskell-suite
.RE

\-\-with-haskell-suite-pkg
.I PATH
.RS
give the path to haskell-suite-pkg
.RE

\-\-with-hmake
.I PATH
.RS
give the path to hmake
.RE

\-\-with-hpc
.I PATH
.RS
give the path to hpc
.RE

\-\-with-hsc2hs
.I PATH
.RS
give the path to hsc2hs
.RE

\-\-with-hscolour
.I PATH
.RS
give the path to hscolour
.RE

\-\-with-jhc
.I PATH
.RS
give the path to jhc
.RE

\-\-with-ld
.I PATH
.RS
give the path to ld
.RE

\-\-with-lhc
.I PATH
.RS
give the path to lhc
.RE

\-\-with-lhc-pkg
.I PATH
.RS
give the path to lhc-pkg
.RE

\-\-with-pkg-config
.I PATH
.RS
give the path to pkg-config
.RE

\-\-with-strip
.I PATH
.RS
give the path to strip
.RE

\-\-with-tar
.I PATH
.RS
give the path to tar
.RE

\-\-with-uhc
.I PATH
.RS
give the path to uhc
.RE

\-\-alex-option
.I OPT
.RS
give an extra option to alex (no need to quote options containing spaces)
.RE

\-\-ar-option
.I OPT
.RS
give an extra option to ar (no need to quote options containing spaces)
.RE

\-\-c2hs-option
.I OPT
.RS
give an extra option to c2hs (no need to quote options containing spaces)
.RE

\-\-cpphs-option
.I OPT
.RS
give an extra option to cpphs (no need to quote options containing spaces)
.RE

\-\-gcc-option
.I OPT
.RS
give an extra option to gcc (no need to quote options containing spaces)
.RE

\-\-ghc-option
.I OPT
.RS
give an extra option to ghc (no need to quote options containing spaces)
.RE

\-\-ghc-pkg-option
.I OPT
.RS
give an extra option to ghc-pkg (no need to quote options containing spaces)
.RE

\-\-ghcjs-option
.I OPT
.RS
give an extra option to ghcjs (no need to quote options containing spaces)
.RE

\-\-ghcjs-pkg-option
.I OPT
.RS
give an extra option to ghcjs-pkg (no need to quote options containing spaces)
.RE

\-\-greencard-option
.I OPT
.RS
give an extra option to greencard (no need to quote options containing spaces)
.RE

\-\-haddock-option
.I OPT
.RS
give an extra option to haddock (no need to quote options containing spaces)
.RE

\-\-happy-option
.I OPT
.RS
give an extra option to happy (no need to quote options containing spaces)
.RE

\-\-haskell-suite-option
.I OPT
.RS
give an extra option to haskell-suite (no need to quote options containing spaces)
.RE

\-\-haskell-suite-pkg-option
.I OPT
.RS
give an extra option to haskell-suite-pkg (no need to quote options containing spaces)
.RE

\-\-hmake-option
.I OPT
.RS
give an extra option to hmake (no need to quote options containing spaces)
.RE

\-\-hpc-option
.I OPT
.RS
give an extra option to hpc (no need to quote options containing spaces)
.RE

\-\-hsc2hs-option
.I OPT
.RS
give an extra option to hsc2hs (no need to quote options containing spaces)
.RE

\-\-hscolour-option
.I OPT
.RS
give an extra option to hscolour (no need to quote options containing spaces)
.RE

\-\-jhc-option
.I OPT
.RS
give an extra option to jhc (no need to quote options containing spaces)
.RE

\-\-ld-option
.I OPT
.RS
give an extra option to ld (no need to quote options containing spaces)
.RE

\-\-lhc-option
.I OPT
.RS
give an extra option to lhc (no need to quote options containing spaces)
.RE

\-\-lhc-pkg-option
.I OPT
.RS
give an extra option to lhc-pkg (no need to quote options containing spaces)
.RE

\-\-pkg-config-option
.I OPT
.RS
give an extra option to pkg-config (no need to quote options containing spaces)
.RE

\-\-strip-option
.I OPT
.RS
give an extra option to strip (no need to quote options containing spaces)
.RE

\-\-tar-option
.I OPT
.RS
give an extra option to tar (no need to quote options containing spaces)
.RE

\-\-uhc-option
.I OPT
.RS
give an extra option to uhc (no need to quote options containing spaces)
.RE

\-\-alex-options
.I OPTS
.RS
give extra options to alex
.RE

\-\-ar-options
.I OPTS
.RS
give extra options to ar
.RE

\-\-c2hs-options
.I OPTS
.RS
give extra options to c2hs
.RE

\-\-cpphs-options
.I OPTS
.RS
give extra options to cpphs
.RE

\-\-gcc-options
.I OPTS
.RS
give extra options to gcc
.RE

\-\-ghc-options
.I OPTS
.RS
give extra options to ghc
.RE

\-\-ghc-pkg-options
.I OPTS
.RS
give extra options to ghc-pkg
.RE

\-\-ghcjs-options
.I OPTS
.RS
give extra options to ghcjs
.RE

\-\-ghcjs-pkg-options
.I OPTS
.RS
give extra options to ghcjs-pkg
.RE

\-\-greencard-options
.I OPTS
.RS
give extra options to greencard
.RE

\-\-haddock-options
.I OPTS
.RS
give extra options to haddock
.RE

\-\-happy-options
.I OPTS
.RS
give extra options to happy
.RE

\-\-haskell-suite-options
.I OPTS
.RS
give extra options to haskell-suite
.RE

\-\-haskell-suite-pkg-options
.I OPTS
.RS
give extra options to haskell-suite-pkg
.RE

\-\-hmake-options
.I OPTS
.RS
give extra options to hmake
.RE

\-\-hpc-options
.I OPTS
.RS
give extra options to hpc
.RE

\-\-hsc2hs-options
.I OPTS
.RS
give extra options to hsc2hs
.RE

\-\-hscolour-options
.I OPTS
.RS
give extra options to hscolour
.RE

\-\-jhc-options
.I OPTS
.RS
give extra options to jhc
.RE

\-\-ld-options
.I OPTS
.RS
give extra options to ld
.RE

\-\-lhc-options
.I OPTS
.RS
give extra options to lhc
.RE

\-\-lhc-pkg-options
.I OPTS
.RS
give extra options to lhc-pkg
.RE

\-\-pkg-config-options
.I OPTS
.RS
give extra options to pkg-config
.RE

\-\-strip-options
.I OPTS
.RS
give extra options to strip
.RE

\-\-tar-options
.I OPTS
.RS
give extra options to tar
.RE

\-\-uhc-options
.I OPTS
.RS
give extra options to uhc
.RE

\-\-only
.RS
Don't reinstall add-source dependencies (sandbox-only)
.RE

.RE

.SH FILES
~/.cabal/config
.RS
The defaults that can be overridden with command-line options.
.RE

~/.cabal/world
.RS
A list of all packages whose installation has been explicitly requested.
.RE

.SH BUGS
To browse the list of known issues or report a new one please see 
https://github.com/haskell/cabal/labels/cabal-install.

